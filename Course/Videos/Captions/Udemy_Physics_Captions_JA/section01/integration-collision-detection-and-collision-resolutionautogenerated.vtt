WEBVTT

00:01.520 --> 00:04.670
ゲーム物理学入門第1章へようこそ。

00:04.700 --> 00:08.360
このセクションでは物理ベースのゲームを作ることの利点について見ていきます。

00:08.510 --> 00:14.060
物理システムにおける3つの主要な懸念事項を見ていきます。

00:14.060 --> 00:17.310
unity、Unityの物理システム、プロジェクトのセットアップについてです。

00:17.330 --> 00:20.180
また、物理、ライフサイクル、タイミングについても見ていきます。

00:20.360 --> 00:25.760
このビデオでは、統合、衝突検出、衝突の解決を見ていきます。

00:25.760 --> 00:28.320
これらは物理システムの三大関心事である。

00:28.340 --> 00:30.650
unityがそれぞれをどう扱うか見てみましょう。

00:30.650 --> 00:34.310
そして、Unityエディターで初めて物理を見てみましょう。

00:34.550 --> 00:36.450
ゲーム物理とは？

00:36.470 --> 00:41.920
一般的にプレイヤーとしてゲーム物理を考える場合、剛体シミュレーションの方を思い浮かべます。

00:41.930 --> 00:43.610
これが計算です。

00:43.610 --> 00:50.690
例えば立方体を積み重ねた場合，立方体同士はどのように重なり合い，衝突し，相互作用するのでしょうか？

00:50.840 --> 00:52.820
空間クエリもある

00:52.820 --> 00:55.690
空間クエリーは視覚的なものではありません。

00:55.700 --> 01:03.650
3D世界の空間を調べ、物理学を使って線を投影して距離を調べます。

01:03.650 --> 01:09.350
を投影して距離を確認する。

01:09.350 --> 01:12.860
また、将来的に衝突する可能性のある場所を先読みすることもできます。

01:12.860 --> 01:19.910
例えば、私のキャラクターの銃が敵に向いているかどうかを評価し、敵に

01:19.910 --> 01:21.380
というリアクションをします。

01:21.590 --> 01:28.460
物理システムの3大関心事は、統合、衝突検出、衝突解決です。

01:28.460 --> 01:31.460
統合は物理がゲームにどのようにフィットするかを扱う。

01:31.460 --> 01:38.780
ワールドコリジョンディテクションは、オブジェクトがどのように重なっているか、それをシステムがどのように検出するかということです、

01:38.780 --> 01:44.840
そして、その重なり合ったオブジェクトの反応を処理するのが衝突判定です。

01:49.520 --> 01:50.900
統合を見てみよう。

01:50.900 --> 01:53.780
unityで物理を使うのはオプションです。

01:53.780 --> 02:00.680
unityのプロジェクトは、ゲームオブジェクトが3次元空間にあり、それぞれが1つの

02:00.680 --> 02:02.300
またはそれ以上のコンポーネントが上に乗っています。

02:02.540 --> 02:09.080
例えば、スクリーンショットのゲームオブジェクトはtransformコンポーネントが必須である。

02:09.080 --> 02:15.440
このプロジェクトに物理演算を追加したい場合は、同じオブジェクトに剛体を追加するだけです。

02:15.440 --> 02:16.160
ゲームオブジェクト

02:16.160 --> 02:19.130
これでゲームオブジェクトは自分の空間を認識できるようになりました。

02:19.130 --> 02:20.810
物理ワールドの内部。

02:20.960 --> 02:26.480
毎フレーム、物理システムは物理に関連するすべてのコンポーネントを見直し、適切なアップデートを行う。

02:26.480 --> 02:27.590
と計算する。

02:27.890 --> 02:29.690
衝突判定は2番目。

02:29.720 --> 02:36.410
このシステムは世界中の物理的なオブジェクトを見て、それらが重なっているかどうかを判断します。

02:36.410 --> 02:42.260
例えばこの画像では青い四角とピンクの四角がほんの少し重なっている。

02:42.470 --> 02:47.060
コリジョンレゾリューションはその重なりを同じ状況で処理します。

02:47.060 --> 02:52.730
青い正方形とピンクの正方形は物理システムによって離れてしまう。

02:52.730 --> 02:53.720
重ならない

02:54.260 --> 03:00.000
物理システムが実行されると、ワールド全体で剛体が重なることはなくなる。

03:00.020 --> 03:03.470
物理システムが実行されると、重なり合う剛体は存在しなくなります。

03:03.470 --> 03:05.540
これが理想的な世界設定です。

03:05.540 --> 03:10.550
物体があたかも固体のように相互作用しているように見える。

03:10.970 --> 03:12.890
それでは、Unityのデモを見てみましょう。

03:12.890 --> 03:18.560
このコースに付属しているアセットファイルをダウンロードした場合は、コアプロジェクトを開いて、ブラウズしてください。

03:18.560 --> 03:19.310
フォルダに移動します。

03:19.310 --> 03:20.240
セクション1

03:20.240 --> 03:23.890
動画2、3Dピラミッドというシーンがあります。

03:23.900 --> 03:25.310
一緒に見ましょう。

03:25.310 --> 03:27.200
こちらも一緒にどうぞ。

03:27.200 --> 03:33.260
シーンをコントロールしながら、スタート、ストップ、ステップの違いを調べます。

03:33.260 --> 03:36.650
シーンのオブジェクトの中から剛体とコライダーを探します。

03:37.410 --> 03:38.890
ここはunityの中です。

03:38.910 --> 03:43.680
このコースに付属している教材をダウンロードすると、このようなプロジェクトがあります。

03:43.710 --> 03:48.300
この中のプロジェクトウィンドウから、これから触れる関連シーンを探すことができます。

03:48.300 --> 03:51.390
また、このメニューからドリルダウンすることもできます。

03:51.390 --> 03:53.190
セクション1

03:54.130 --> 03:56.820
ビデオ2、3、Dピラミッド。

03:56.830 --> 04:01.290
"再生 "と "一時停止 "が可能です。

04:01.300 --> 04:02.930
フレームごとにステップします。

04:02.970 --> 04:03.910
再生します。

04:03.920 --> 04:06.160
箱と箱が重なる

04:06.160 --> 04:11.680
そして、シーンを操作して、現実世界の物理的な相互作用を見ることができます。

04:12.100 --> 04:17.470
それぞれのキューブも同じようにセットアップされ、インスペクタ・ウィンドウでは次のように表示される。

04:17.470 --> 04:19.780
ボックスコライダーと剛体。

04:19.780 --> 04:26.020
この2つの物理コンポーネントについては、今後のレッスンで学んでいくことになる。

04:26.020 --> 04:28.180
システム，過去，現在，未来

04:28.270 --> 04:29.890
"単一性 "とは何か？

04:29.890 --> 04:32.350
一歩引いてシステムそのものを見てみる。

04:32.350 --> 04:37.780
今日のユニティ物理学の図書館とパワーユニティを見て、ユニティの未来を見てみる。

04:37.780 --> 04:38.440
物理学
