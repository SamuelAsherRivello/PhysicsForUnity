WEBVTT

00:01.640 --> 00:04.290
ユニティ物理プロジェクトの設定

00:04.310 --> 00:07.880
このビデオでは、Unityのプロジェクト設定とは何か？

00:07.880 --> 00:10.550
物理演算に最も重要な設定とは？

00:10.550 --> 00:15.230
また、Unityのエディタ内でこれらの設定を試し、いくつかの結果を見てみましょう。

00:15.860 --> 00:17.360
Unityプロジェクトの設定。

00:17.360 --> 00:23.390
これらはグラフィックや物理など、unityの主要なシステムを調整するために使用する高レベルの設定です。

00:23.390 --> 00:24.290
開くには

00:24.290 --> 00:26.730
unityのプロジェクト設定を編集します。

00:26.750 --> 00:31.370
スクリーンショットが示すように、検索ボックスがあり、設定を絞り込むことができます。

00:31.370 --> 00:36.890
設定項目はカテゴリー別に分類され、詳細ペインには設定項目が表示されます。

00:36.890 --> 00:39.440
物理プロジェクトと相互作用します。

00:39.440 --> 00:43.100
3つのDの設定には様々なプロパティが含まれています。

00:43.100 --> 00:45.020
ここではいくつかの重要なものに焦点を当てます。

00:45.020 --> 00:46.310
まずは重力です。

00:46.310 --> 00:52.670
初期設定では地球の重力をシミュレートしています。

00:52.670 --> 00:55.460
重力を調整することができます。

00:55.460 --> 01:01.010
なお、重力を大幅に変更する場合は、デフォルトの

01:01.010 --> 01:04.070
ソルバーの反復を調整することで、より安定した結果が得られるだろう。

01:04.070 --> 01:09.320
また、デフォルトのマテリアルを設定することもできます。後のセクションで物理マテリアルについて説明します。

01:09.320 --> 01:14.120
このマテリアルを設定することで、ワールド内の各オブジェクトの弾みやすさや摩擦などの特性を変えることができます。

01:14.120 --> 01:15.440
もしそれらをグローバルに設定したいのであれば

01:15.440 --> 01:18.080
このモードとコンタクトペアモードがあります。

01:18.080 --> 01:22.520
物理ワールドでキネマティックオブジェクトを動かす場合は、この設定を微調整するとよいでしょう。

01:22.520 --> 01:25.550
キネマティック剛体のプロパティについては後で説明します。

01:25.550 --> 01:29.090
他にも興味深い性質があり、決定論が強化されています。

01:29.090 --> 01:34.130
このモードではパフォーマンスが犠牲になる。

01:34.130 --> 01:35.570
より良い決定論が得られる。

01:35.570 --> 01:41.630
物理学における決定論とは，同じシミュレーションを何度繰り返しても同じ結果が得られるということだ。

01:41.630 --> 01:43.520
ゲームプレイのデザインによっては

01:43.520 --> 01:44.480
これは重要なことだ。

01:45.380 --> 01:51.200
レイヤーのコリジョンマトリックスは、ワールド内のどのオブジェクトがどのオブジェクトと衝突するかを定義します。

01:51.200 --> 01:54.950
unityのデフォルトでは、すべてのオブジェクトはすべてのオブジェクトと衝突します。

01:54.950 --> 01:57.920
このように、視覚的な結果と素早いフィードバックが得られます。

01:57.920 --> 02:03.350
最適化としてゲームをデザインする場合、衝突しないすべてのチェックを外すことを検討する。

02:03.350 --> 02:07.190
そうすれば、より良いパフォーマンスが得られるでしょう。

02:07.980 --> 02:09.400
デモを見てみよう。

02:09.420 --> 02:11.280
3Dピラミッドのプロジェクトを見てみましょう。

02:11.280 --> 02:11.730
もう一度

02:11.730 --> 02:18.060
重力のデフォルトマテリアルとレイヤーのコリジョン・マトリックスをUnityの中で遊んでみます。

02:18.060 --> 02:22.520
セクション1、ビデオ2、ビデオ3、Dピラミッドを開いてみましょう。

02:22.530 --> 02:29.640
このシーンを再利用して、エディットウィンドウのプロジェクト設定について説明します。

02:29.790 --> 02:34.560
Unity内の様々なプロジェクト設定を全て見ることができます。

02:34.620 --> 02:40.830
このデモでは2D物理のPhysics two Dと3D物理のPhysics three Dに興味があります。

02:40.830 --> 02:41.640
D physics.

02:41.640 --> 02:45.330
3Dシーンがあるので、まずそれを操作してみましょう。

02:45.330 --> 02:50.000
まずはシーンを再生してみましょう。この立方体が互いに重なっているのがわかります。

02:50.010 --> 02:55.710
地球を模した負の重力から正の重力に変えてみましょう。

02:55.830 --> 03:00.000
これは上方向に重力を発生させるものでしょう。

03:00.000 --> 03:03.210
ゲームの仕組みによっては必要かもしれませんね。

03:03.630 --> 03:07.560
このオブジェクトは空中を飛ぶことができます。

03:07.560 --> 03:11.310
(゜ロ゜)(。_。)ウンウン

03:11.310 --> 03:15.300
この小さな歯車の中にあるメニューを開いてリセットを押すんだ。

03:15.370 --> 03:18.990
これで、このウインドウのすべての値がデフォルトに戻ります。

03:18.990 --> 03:21.110
これで変更は元に戻りました。

03:21.120 --> 03:25.140
次にプロジェクトウィンドウ内のデフォルトの素材を見てみましょう。

03:25.140 --> 03:27.630
物理マテリアルを作成することができました。

03:27.630 --> 03:32.820
これについては後で詳しく説明しますが、物理マテリアルを作成した場合

03:32.820 --> 03:38.490
のような弾力性のある素材を作成し、それをドラッグして新しい

03:38.490 --> 03:39.570
デフォルトのマテリアルです。

03:39.570 --> 03:45.480
シーンにまだマテリアルがついていないオブジェクトがあれば、それをマテリアルとしてドラッグします、

03:45.480 --> 03:47.940
これが新しいデフォルトのマテリアルになります。

03:47.940 --> 03:50.520
この素材は弾むような素材です。

03:50.520 --> 03:52.140
それではシーンを再生してみましょう。

03:53.890 --> 03:57.310
少なくとも1つの箱は少しおかしな動きをしているのがわかります。

03:57.730 --> 04:03.100
これを動かしてみると......動かしたものがシーンを跳ね回っているのがわかる。

04:03.670 --> 04:05.620
跳ね返りのレベルが高い。

04:05.650 --> 04:07.360
これで全員に均等に影響が出た。

04:07.360 --> 04:09.400
どれを操作するかによる

04:11.260 --> 04:13.720
もう一度シーンを止めてリセットすると

04:14.710 --> 04:17.660
レイヤーのコリジョンマトリックスが表示されます。

04:17.680 --> 04:23.440
これはレイヤーごとにプロジェクト内のすべてのものが衝突していることを示しています。

04:23.470 --> 04:25.120
レイヤーが設定されています。

04:25.390 --> 04:30.850
一番上に、シーン内のオブジェクトのレイヤーを指定します。

04:30.850 --> 04:32.590
はデフォルトとして指定されています。

04:33.550 --> 04:38.530
そして環境内では床がfloorに指定されています。

04:38.920 --> 04:40.990
シーンを再生すると

04:43.980 --> 04:47.310
フロアのチェックを外してデフォルトにします。

04:47.310 --> 04:52.890
すると、デフォルトのキューブが床を突き破って落ちてくるのがわかります。

04:52.920 --> 04:55.920
マトリックスの中でコントロールできるわけだ。

04:56.220 --> 05:01.450
また、シーン中に加えた変更は、シーンを止めるとリセットされる可能性があることに注意。

05:01.470 --> 05:03.450
このウィンドウの中では、少し異なります。

05:03.450 --> 05:05.610
設定は固定されるものとされないものがあります。

05:05.640 --> 05:08.070
だから、変更するときは意識してください。

05:08.070 --> 05:12.360
シーンを再生している場合は、シーンを止めた後にリセットする必要があるかもしれません。

05:14.140 --> 05:17.830
2Dの物理プロジェクトの設定は別のパネルになっています。

05:17.830 --> 05:22.160
2Dで重要なプロパティのほとんどは、3Dで説明したものと同じです。

05:22.180 --> 05:24.820
スクリーンショットを見てもらえばわかると思いますが、注目すべき点があります。

05:24.820 --> 05:30.910
あなたのゲームプロジェクトに2Dと3Dの両方の物理演算が含まれている可能性があります。

05:30.910 --> 05:31.630
どちらかを選択します。

05:31.630 --> 05:38.080
もしあなたのゲームが2Dで、2つのD物理を使用しているのであれば、物理設定を変更する際に確認してください、

05:38.080 --> 05:41.050
05:38.080 --> 05:41.050 右の物理2Dのパネルにいることを確認してください。

05:42.620 --> 05:47.770
(゜ロ゜;ノ）ノ

05:47.780 --> 05:50.330
unityプロジェクトの構造を見ていきます。

05:50.330 --> 05:56.360
unityにおけるmonoビヘイビアの役割と、ビヘイビアのコードを見ていきます。

05:56.360 --> 05:56.990
物理学
