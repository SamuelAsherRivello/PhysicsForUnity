WEBVTT

00:01.060 --> 00:03.670
トリガー・イベントとコライダー・オブジェクトについて。

00:03.760 --> 00:08.470
このビデオでは、トリガー・イベントとは何か、そしてなぜトリガー・イベントがゲームに役立つのかを説明します。

00:08.740 --> 00:12.280
また、Unityのエディタを開き、トリガーイベントを使って遊びます。

00:12.790 --> 00:14.890
なぜトリガーイベントを使うのか？

00:15.220 --> 00:19.210
トリガーイベントは、物理的な交差に関するより多くの情報を与えてくれます。

00:19.510 --> 00:22.630
ゲームオブジェクトとコライダーとの間に発生します。

00:22.630 --> 00:24.790
トリガーがtrueに設定されている場合。

00:25.150 --> 00:26.500
ゲーム中に有効です。

00:26.500 --> 00:29.980
例えば、ダンジョンの部屋に入った時など。

00:30.460 --> 00:33.730
ここで、トリガーイベント以外のシナリオを見てみましょう。

00:34.180 --> 00:37.300
ピンクのキューブがトリガーのボリュームに向かっている。

00:37.510 --> 00:43.120
ピンクの立方体は剛体とコライダーを持ち、落下してその境界を検出します。

00:43.120 --> 00:47.350
そして緑にはコライダーがあり、トリガーはtrueに設定されています。

00:47.620 --> 00:55.450
ピンクが落下し、ピンクがトリガーボリュームに入り、ピンクの間に1回トリガーが入る。

00:55.450 --> 00:57.640
がトリガーボリュームに入る。

00:57.640 --> 01:01.900
ピンクがトリガーボリュームの中にいる間、トリガーステイのコールが繰り返されます。

01:02.080 --> 01:04.840
何度も呼び出されることが予想されます。

01:05.570 --> 01:12.560
ピンクが退場すると、トリガーボリュームに1回だけon trigger exitが呼び出され、その後ピンクが続行します。

01:12.560 --> 01:13.220
下落を続けます。

01:16.760 --> 01:21.530
コールバックから必要な情報を得るには、これで十分です。

01:21.620 --> 01:27.800
例えば、キャラクターがダンジョンの部屋に入ると、次のように通知されます。

01:27.800 --> 01:34.040
コライダーオブジェクトを検査することで、それがダンジョンの部屋かどうかを調べることができます。

01:34.310 --> 01:40.460
つまり、コライダーオブジェクトはオブジェクトの形状を定義するコンポーネントなのです。

01:40.460 --> 01:41.700
物理的な衝突のために

01:41.720 --> 01:47.210
もちろんコライダーは以前にも使ったことがあるが、ここではコライダーという1つのプロパティに焦点を当てることにする。

01:47.420 --> 01:51.510
01:47.420→01:51.510:ゲームオブジェクトのコライダープロパティです。

01:51.530 --> 01:53.600
どのゲームオブジェクトか？

01:53.990 --> 01:57.380
トリガーイベントのデモを見てみましょう。

01:57.380 --> 02:03.290
シーンを再生し、コードをチェックし、おまけとしてコンソールを見てみましょう。

02:03.290 --> 02:05.360
折りたたみというWindowsの機能

02:06.600 --> 02:07.610
ここはunityです。

02:07.620 --> 02:09.150
次のシーンを開いてみましょう。

02:12.660 --> 02:19.260
enのトリガーイベント、その1、ここではq bにボックスコライダーが設定されていることに気づくだろう。

02:19.260 --> 02:21.480
トリガーが設定されている。

02:21.780 --> 02:23.430
剛体もありません。

02:23.640 --> 02:27.030
このシーンを再生すると、ピンクがそのまま落ちてくると思われます。

02:27.180 --> 02:28.020
見てみよう

02:32.280 --> 02:32.650
そうだ

02:32.760 --> 02:34.770
予想通りの動きだ。

02:34.860 --> 02:42.110
コンソールを見てみると......1回の入場で何度も滞在し、1回の退場がある。

02:42.120 --> 02:43.230
コードを見てみよう。

02:46.790 --> 02:47.390
トリガー

02:47.390 --> 02:48.560
シュガーを入力

02:48.560 --> 02:49.830
そのままゴール。

02:49.850 --> 02:50.330
終了。

02:50.330 --> 02:51.600
予想通り

02:51.620 --> 02:52.430
これで終了。

02:53.600 --> 02:57.320
次のビデオでは、プログラマティック・フォースを追加します。

02:57.920 --> 03:04.880
このビデオでは、物理学に特化したユニティにおける伝統的な意味での動きとユニティを取り上げます。

03:04.970 --> 03:10.100
unityエディターを開き、その力を使って遊びます。
