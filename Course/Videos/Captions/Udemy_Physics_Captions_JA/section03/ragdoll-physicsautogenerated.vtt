WEBVTT

00:01.700 --> 00:02.900
ラグドール物理

00:02.900 --> 00:06.890
このビデオでは、ラグドール物理学とは何か、どのように設定するのかを説明します。

00:06.920 --> 00:11.480
そしてUnityを開き、Unityエディターを使ってラグドールキャラクターを作成します。

00:12.170 --> 00:13.730
ラグドールの物理学とは？

00:13.760 --> 00:19.940
ゲームではよくあることですが、人型のキャラクターが二足歩行したり、腕が二本あったりしますよね、

00:19.940 --> 00:20.810
例えば

00:20.810 --> 00:25.030
そしてそのキャラクターはゲームプレイ中に死んだり、気絶したりする。

00:25.040 --> 00:30.710
(笑)そして、そのキャラクターが一人称視点で撃たれた時のリアルな体の動き......。

00:30.710 --> 00:35.180
シューティングゲームで撃たれたり、格闘ゲームで気絶させられたり。

00:35.190 --> 00:39.770
気絶したキャラクターの落下運動は、いわゆるラグドール物理学である。

00:40.600 --> 00:42.550
ラグドールを使わない例です。

00:42.760 --> 00:44.590
ヒューマノイドモデルです。

00:44.800 --> 00:48.190
キャラクター全体のコライダーは1つです。

00:48.550 --> 00:53.650
見ての通り、キャラクターはマネキンのような硬い一体に見えます。

00:53.680 --> 00:59.560
これでは、ゲームに求められるようなバラエティや臨場感が得られません。

01:00.040 --> 01:04.720
ラグドールでは、同じモデルを使っていますが、コライダーがたくさんあります。

01:04.720 --> 01:07.130
体のパーツごとにコライダーがあります。

01:07.150 --> 01:09.820
ヒューマノイドモデルの場合はたくさんあります。

01:09.850 --> 01:14.440
このように、よりゆるく、よりランダムに見えるのがいい。

01:14.650 --> 01:21.910
これは全く同じテイクのループ動画ですが、もしこれをライブでゲームプレイで繰り返すとしたら

01:21.910 --> 01:23.380
微妙な動きが見られるだろう。

01:27.970 --> 01:28.930
それがいい。

01:29.920 --> 01:34.060
この2つを比較すると、ラグドールを使った左の結果の方がいい。

01:34.150 --> 01:36.220
よりルーズなフィーリング。

01:36.220 --> 01:41.470
ラグドールを使わないで巨大なコライダーを1つ使うよりも、よりリアルなものが得られる。

01:42.620 --> 01:44.210
それではラグドールをセットしてみましょう。

01:44.360 --> 01:48.390
このような流れで3Dキャラクターモデルをセットアップしていきます。

01:48.410 --> 01:50.570
次にコライダーをたくさん追加する

01:50.570 --> 01:56.270
スクリーンショットを見ると、シーンにあるイーサン・スケルトンのキャラクターには

01:56.270 --> 01:57.590
たくさんのパーツがあります。

01:57.740 --> 02:02.900
手、前腕、上腕の前腕などなど。

02:02.900 --> 02:07.550
そして，それらの剛体とコライダーのペアの間にジョイントを置く必要がある。

02:07.550 --> 02:09.890
そしてそれをプレハブとして保存すれば完成だ。

02:09.920 --> 02:15.860
しかし、幸いなことにUnityにはエディタが用意されており、それを使って次のようなことができる。

02:15.860 --> 02:17.090
を使うことができます。

02:17.090 --> 02:18.920
これがボロ人形ウィザードか。

02:18.920 --> 02:25.430
UnityメニューのGame Object 3からObject Ragdollを開くと、メニューが表示されます。

02:25.430 --> 02:26.700
スクリーンショットをご覧ください。

02:26.720 --> 02:33.800
そのあと、先ほどのスクリーンショットで見たような、入り組んだ階層構造の各パーツをドラッグします。

02:33.800 --> 02:39.470
骨盤、左腰、左膝など。このとき注意しなければならないのは

02:39.470 --> 02:49.880
しかし、人型のキャラクターには少なくともこれだけのパーツがあるのが通例だ。

02:49.880 --> 02:53.480
そしていくつかのプロパティを設定する。

02:53.480 --> 02:56.150
このプロパティは総質量に焦点を当てます。

02:56.150 --> 02:59.510
この値は全ての関節に分配されます。

02:59.510 --> 03:05.630
つまり、デフォルトの値を20とすれば、20の総質量がそれらの関節に分散されることになる。

03:05.840 --> 03:08.600
強度は関節の抵抗力です。

03:08.600 --> 03:11.950
値が高ければバラバラになりにくい。

03:11.960 --> 03:15.260
体のパーツがバラバラにならないように。

03:15.260 --> 03:17.960
だから、この値はかなり高めに設定するのが一般的です。

03:17.990 --> 03:19.040
フリップフォワード

03:19.040 --> 03:25.910
この値をtrueに設定すると、モデルが逆向きに作成された場合、それを補正します。

03:25.940 --> 03:26.210
となります。

03:26.210 --> 03:30.380
しかし、通常、モデルを世界にドラッグし、それが前方を向いている場合は

03:30.380 --> 03:34.070
|にできるようにあなたがそれをすることができます本当に出くわすことあなたは、実際には私たち約束、誰でも素早くはちょうど無視これらの一見正確にどのように{}人のことを忘れることができます。

03:35.320 --> 03:37.450
それではラグドールを作ってみましょう。

03:38.170 --> 03:40.760
ラグドールの開始シーンを開きます。

03:40.780 --> 03:44.950
シーンを再生すると、まだラグドールが追加されていません。

03:44.980 --> 03:47.300
ウィザードを使ってラグドールを追加します。

03:47.320 --> 03:49.870
もう一度シーンを再生して、完成したエフェクトを見てみましょう。

03:50.750 --> 03:52.340
それでは次のシーンを開いてみましょう。

03:53.380 --> 03:53.560
ここです。

03:53.560 --> 03:55.630
ラグドール・ビギンの登場です。

03:56.560 --> 04:00.290
"立方体のピラミッド "でお馴染みの "立方体 "が並んでいます。

04:01.540 --> 04:03.210
モデルの上に追加しました。

04:03.210 --> 04:07.680
このキャラクターモデルはイーサンといい、ラグドールなしのイーサンとしました。

04:08.310 --> 04:10.140
このモデルを見てみましょう。

04:11.070 --> 04:14.820
骨格がありますね。

04:15.510 --> 04:17.010
多くのパーツがあります

04:17.040 --> 04:21.420
さらに視野を広げると...

04:28.010 --> 04:29.840
たくさんのパーツがあるのがわかる。

04:29.840 --> 04:36.470
このシーンを再生するだけでは何も起こりません。なぜならまだ物理演算が行われていないからです。

04:36.470 --> 04:41.510
しかし，物理演算ができないため，キャラクターは宙に浮いてしまいます。

04:41.510 --> 04:42.520
まだ物理的な要素がないからです。

04:42.530 --> 04:45.950
ウィザードを使ってラグドールを作ってみましょう。

04:49.810 --> 04:54.170
ウィザードの指示に従い、すべてのボーンを階層からスロットにドラッグします。

04:54.190 --> 04:56.770
キャラクターがPTスタンドにいることを確認します。

04:56.860 --> 04:59.320
キャラクターがPTスタンドにいることを確認します。

04:59.350 --> 05:06.310
一般的に3Dモデラーやアニメーターは、腕を伸ばし、胴体を

05:06.310 --> 05:09.640
比較的まっすぐなTの字のように見えます。

05:09.790 --> 05:11.890
それではドラッグしてみましょう。

05:22.410 --> 05:25.410
このモデルとは名前の一部が異なっていることに注意してください。

05:25.410 --> 05:32.760
骨盤、左腰などとは限らない。勿論,これは,いくつかの実験が必要かもしれません。

05:36.030 --> 05:38.760
パーツのネーミングは各自が自由に決めている。

05:38.850 --> 05:45.000
ボロ人形の魔法使いが望む構造と1対1の関係があることを望みます。

05:45.000 --> 05:46.510
モデルの構造

05:46.530 --> 05:49.800
これが最後のステップのようです。

05:49.800 --> 05:53.790
総質量、強さ、フリップフォワードを設定します。

05:54.090 --> 05:56.970
総質量を大きくしてみます。

05:57.300 --> 05:59.660
筋力を100にしてみます。

05:59.670 --> 06:01.200
値を1にしてみます。

06:01.470 --> 06:02.820
フリップフォワード

06:02.820 --> 06:04.020
trueにします。

06:04.650 --> 06:06.180
ここでエラーが出ます。

06:06.180 --> 06:09.810
右肘と左肘が同じでない可能性があります。

06:09.810 --> 06:11.010
それでは

06:13.260 --> 06:18.270
うっかり設定を間違えてしまったので、右を使います。

06:19.530 --> 06:19.920
素晴らしい。

06:19.920 --> 06:20.730
エラーなし。

06:20.730 --> 06:22.260
作成ボタンも使える

06:23.000 --> 06:23.880
完了です。

06:23.900 --> 06:25.790
これでモデルを探索すると

06:26.720 --> 06:28.880
主要な部分をクリックしてみます。

06:29.210 --> 06:35.090
例えば左腕の場合、キャラクタジョイントとリジッドジョイントが設定されています。

06:35.090 --> 06:35.680
ボディ

06:35.690 --> 06:38.090
それぞれ適切に設定されていますね。

06:38.090 --> 06:39.830
シーンを走らせて結果を見てみよう。

06:43.940 --> 06:44.720
いい感じだ。

06:45.320 --> 06:50.870
パブのシーンで使えるスペースバーのショートカットを使って、何度か見てみる。

06:55.210 --> 07:00.520
今度は質量を100に設定したので、キューブを押し出しながら落下します。

07:02.760 --> 07:08.910
もし別の値、例えばデフォルトの20より低い値を設定していたら、キューブの周りに落下していたかもしれません。

07:08.910 --> 07:12.330
しかし、ここでは比較的重く、比較的どっしりとしている。

07:15.120 --> 07:17.580
次のビデオでは、地形物理学について説明します。
