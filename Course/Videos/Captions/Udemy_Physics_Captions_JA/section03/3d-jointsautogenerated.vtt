WEBVTT

00:01.720 --> 00:02.930
Dジョイント3本

00:02.950 --> 00:06.710
このビデオでは、3つのDジョイントの概念について説明します。

00:06.730 --> 00:12.670
また、様々なタイプのジョイントを紹介し、Unityエディターを開いて3Dチェーンを作成します。

00:12.670 --> 00:13.810
ジョイントを使います。

00:14.140 --> 00:21.370
(この章では、物理の基本的な知識を紹介します。)

00:14.140 --> 00:21.810 
Unity のエディタを開き、ジョイントを使って3Dチェーンを作成します、

00:23.350 --> 00:26.500
セクション3の前にセクション2を見ておくことをお勧めします。

00:27.330 --> 00:28.410
関節コンポーネント

00:29.080 --> 00:35.020
このコンポーネントは、1つまたは複数のゲームとの位置関係や回転関係を維持するものです。

00:35.020 --> 00:35.740
オブジェクト

00:35.770 --> 00:39.730
関節はゲームオブジェクトに剛体で取り付けることができます。

00:39.730 --> 00:43.300
これは一般的な方法ですが、ワールド空間の固定位置に取り付けることもできます。

00:43.330 --> 00:48.340
ご覧のように、おなじみのトランスフォームとリジッドボディを持つゲームオブジェクトができました。

00:48.340 --> 00:52.480
関節の種類は3Dでたくさんある。

00:52.900 --> 00:57.100
ヒンジジョイントは剛体同士を蝶番でつないだように拘束します。

00:57.100 --> 01:01.480
例えば、一般的な開閉するスイングドアやチェーンなど。

01:01.480 --> 01:07.240
スプリングジョイントは，あたかも弾力性のあるバネのように，2つのゲームオブジェクトの間の関係を維持します。

01:07.240 --> 01:09.880
01:07.240→01:09.880）。

01:09.880 --> 01:15.820
固定関節は2つのゲームオブジェクト間の相対的な位置角度とオフセットを維持します。

01:15.820 --> 01:20.470
主にラグドールの物理演算に使われるボールソケットジョイントです。

01:20.470 --> 01:22.840
ラグドールについては今後のセクションで取り上げます。

01:22.840 --> 01:25.810
関節の形状は非常に多彩です。

01:25.810 --> 01:29.560
このジョイントを使えば、他の全てのジョイントを作ることができます。

01:30.710 --> 01:32.810
高度なプロパティを見てみましょう。

01:33.350 --> 01:37.220
ジョイントには様々な種類がありますが、雰囲気をつかむために1つだけ見てみましょう。

01:37.250 --> 01:38.790
文字関節を見てみましょう。

01:38.810 --> 01:41.760
多くのプロパティがありますが、ここではその一部を紹介します。

01:41.780 --> 01:46.250
コネクテッドボディ（Connected body）は、このジョイントが接続している他の剛体への参照です。

01:46.280 --> 01:51.320
アンカーは関節の動きを拘束するアンカーの位置です。

01:51.350 --> 01:55.040
auto configure connectedはデフォルトでtrueになっています。

01:55.040 --> 02:02.000
trueの場合、接続されたアンカーのプロパティはグローバルなアンカーと一致するように自動的に計算されます。

02:02.000 --> 02:04.460
アンカーの位置が自動的に計算されます。

02:04.640 --> 02:05.420
リミット

02:05.420 --> 02:11.810
関節のワールドプロパティ（位置、回転など）の取り得る値の範囲を制限します。

02:11.810 --> 02:14.930
関節の角度制限を編集します。

02:14.930 --> 02:20.150
また、関節の角度制限を編集することもできます。

02:21.360 --> 02:22.950
3Dチェーンを作ってみましょう。

02:23.580 --> 02:29.790
ここでは、金属製のリンクが1つまたは2つ連なったものを作ります。

02:29.790 --> 02:36.090
このようにすることで，各リンクが連動して動くようになるのだ。

02:36.090 --> 02:36.600
のように動く。

02:36.630 --> 02:43.440
タスクの内訳 まずトップでは、固定ジョイントを使ってトップリンクを固定位置につなげます。

02:43.440 --> 02:44.620
3D世界の中で

02:44.640 --> 02:50.180
キューブが動くとチェーンもそれに追従するように、キューブを使って視覚的な合図を出します。

02:50.190 --> 02:54.370
こうすることで、キューブがハンドルのように機能し、マウスで動かすことができる。

02:54.390 --> 02:58.440
キャラクタジョイントを使って、上のリンクと他のリンクをつなげます。

02:59.560 --> 03:00.700
デモを開始します。

03:00.940 --> 03:06.730
3Dチェーンの始まりです。 トップリンクとキューブをつなぐ固定ジョイントを作ります。

03:06.760 --> 03:09.130
次にキャラクタジョイントを作成する。

03:09.130 --> 03:14.950
他の各リンクがシーンを再生し、シーン内のキューブを動かして結果を見る。

03:15.100 --> 03:16.720
次のシーンを開いてみよう。

03:18.000 --> 03:19.920
3つのDチェーンで始めます。

03:21.390 --> 03:25.470
まずはチェーンリンクをキューブに接続します。

03:25.800 --> 03:27.270
固定ジョイントで行う

03:39.800 --> 03:42.650
キューブを動かすと...

03:44.110 --> 03:46.930
リンクの動きが自動的に得られる

03:52.050 --> 03:53.580
今度は複製します。

03:57.810 --> 04:00.030
関節を固定する代わりに

04:01.090 --> 04:02.680
キャラクタージョイントを使います。

04:18.170 --> 04:25.550
そして、以前実験したときの値を貼り付けて、ここにあるのはアンカーと

04:25.550 --> 04:30.170
軸はハイライトされたリンクの一番上に設定されている。

04:30.380 --> 04:33.470
これによって、リンクが上から揺れ動くようになります。

04:36.610 --> 04:38.440
もちろん回転もさせたい。

04:41.320 --> 04:43.210
そして、望み通りの結果が得られた。

04:43.950 --> 04:50.220
チェーンリンク2はチェーンリンク1に接続される。

04:50.760 --> 04:55.980
次に、同じセットアップをいくつかのリンクに複製します。

05:12.390 --> 05:13.320
複製する。

05:13.320 --> 05:19.920
コントロールDを使用していますが、ここに複製オプションがあり、階層構造で選択されたアイテムを取ります。

05:19.920 --> 05:21.090
複製します。

05:26.600 --> 05:28.430
これで、見栄えが良くなりました。

05:28.430 --> 05:31.610
お互いを190度回転させます。

05:41.600 --> 05:41.870
そこだ

05:41.870 --> 05:43.130
いい感じです

05:43.160 --> 05:47.600
各キャラクターのジョイントをもう一度確認し、上のジョイントとペアレントになっていることを確認します。

05:50.250 --> 05:51.540
チェーンリンクします。

05:52.840 --> 05:54.460
チェーンリンク1に接続。

06:08.380 --> 06:10.390
シーンを実行して見てみよう。

06:17.530 --> 06:20.440
一番上のキューブを選択し、動かしてみます。

06:29.270 --> 06:30.200
いい感じです。

06:31.240 --> 06:36.130
このリンクをいくつでも追加すれば、さらに見栄えのする効果が得られるだろう。

06:39.380 --> 06:42.230
次のビデオでは、ラグドールの物理学について説明する。
