WEBVTT

00:01.740 --> 00:07.570
このビデオでは、収集したコインにプログラムによるアニメーションを追加することで、さらに磨きをかける。

00:07.590 --> 00:11.640
サウンドマネージャーを使ってサウンドを追加し、レベルデザインについて説明します。

00:11.850 --> 00:13.230
ポーランド語とは？

00:13.230 --> 00:13.640
ポーランド語？

00:13.830 --> 00:18.960
プロジェクトの最後にある小さなディテールが、良いプロジェクトを素晴らしいものにする？

00:18.990 --> 00:24.420
多くの場合、ビジュアルやオーディオ、アニメーション、ゲームプレイの微調整などです。

00:25.560 --> 00:29.370
(笑)(笑)(笑)(笑)(笑)(笑)(笑)(笑)

00:29.370 --> 00:33.870
コインを集めると一瞬で消えるのではなく、フェードインします。

00:33.870 --> 00:38.670
サウンドマネージャーを使ってキーイベントにサウンドを追加し、レベルデザインについて説明します。

00:39.680 --> 00:45.000
このプロジェクトでは、セクション6「ビデオ5 クレイジーボール5 OC」を公開します。

00:45.050 --> 00:49.070
Unityの中に入ってクレイジーボール5を開きます。

00:49.850 --> 00:55.580
このように、いくつかのサウンドとアニメーションが追加されました。

00:55.580 --> 00:57.740
レベルデザインについても少し触れたいと思います。

00:57.890 --> 01:02.180
まずはコインを集めた時のエフェクトから。

01:02.540 --> 01:07.370
今までは、コインを集めると一瞬で消えていました。

01:07.880 --> 01:12.860
そして、ここでは原寸大からゼロに縮小しています。

01:13.130 --> 01:14.120
とても速い。

01:14.120 --> 01:15.620
でも、効果はあると思います。

01:15.620 --> 01:15.860
見てろ

01:15.860 --> 01:19.040
このコインを集めると縮むんです。

01:19.040 --> 01:23.740 
微妙な感じですが、磨けば磨くほど味が出てきます。

01:26.810 --> 01:28.700
では、どうやってそれを達成するのか見てみましょう。

01:29.460 --> 01:30.960
コードを見てみましょう。

01:31.690 --> 01:38.230
このコインでは、destroy me publicメソッドの前に設定したdestroyメソッドで

01:38.230 --> 01:42.990
というフラグを立て、すぐにdestroyしています。

01:43.000 --> 01:49.180
さて、1番ではdo scaleオペレーションを使ってスケールダウンしています。

01:49.180 --> 01:55.390
をゼロにするために約1/4秒の間にイージングを設定している。

01:55.390 --> 01:58.150
01:55.390->01:58.150.バウンスさせたり、早くしたり、加速させたり。

01:58.150 --> 01:59.680
いろいろな選択肢がありますね。

01:59.680 --> 02:01.960
そしてオンコンプリート方式を設定します。

02:01.960 --> 02:07.090
アニメーションの終了を待ってオブジェクトを破壊する。

02:07.090 --> 02:12.700
つまり、オブジェクトを即座に破壊するのではなく、このような素敵なアニメーションを行い、約四分の一の時間で

02:12.700 --> 02:15.430
秒後に破壊されます。

02:15.430 --> 02:16.810
ここで設定を見ることができます。

02:16.810 --> 02:22.330
縮小率をゼロにすると1/4秒になります。

02:22.720 --> 02:25.870
それではシーン内のサウンドデザインについてです。

02:25.870 --> 02:27.280
サウンドマネージャーを設定しました。

02:27.280 --> 02:28.390
それを見てみましょう。

02:29.630 --> 02:37.250
環境にはサウンドマネージャーがあり、必要なサウンドが並んでいます。

02:37.250 --> 02:38.900
をプロジェクトからドラッグして、ここに並べます。

02:38.900 --> 02:42.920
WAVファイルやM.P.3を使って音を作ることができる。

02:42.920 --> 02:50.000
"0 "はコイン、"1 "はコリジョン...といった具合です。

02:50.090 --> 02:51.410
もう一度コードを見てみましょう。

02:52.490 --> 02:59.780
トリガーが入力されると、コインを獲得したことがわかります。

02:59.780 --> 03:05.990
そして、サウンドマネージャーのインスタンスplayを使ってサウンドを再生します。

03:05.990 --> 03:09.320
オーディオ・クリップのインデックスを渡す。

03:09.680 --> 03:10.940
これらはすべてここに保存される。

03:10.940 --> 03:14.930
定数の中で、今どの音を演奏しようとしているのかが正確にわかるようになりました。

03:14.930 --> 03:18.110
プロジェクト内でサウンドを整理する方法はたくさんあるけど、この方法は有効だね。

03:18.110 --> 03:20.570
さて、次はゲームデザインについてです。

03:22.050 --> 03:25.770
少しズームアウトして、世界を上から見てみましょう。

03:27.430 --> 03:30.070
これが本来のゲームデザインだ。

03:30.130 --> 03:35.400
ゴール地点が見えるようにしたいと最初から考えていました。

03:35.410 --> 03:42.700
タイムUI、スコアUI、そして視覚的に最終ゴールにつながることで、ユーザーを導いているわけだ。

03:42.700 --> 03:45.340
明確な道筋ができる。

03:45.550 --> 03:48.610
そして、ゲームをプレイしていく。

03:49.430 --> 03:55.970
コインを全部取ろうとするのでしょう。

03:55.970 --> 04:01.070
コインを集めると得点が上がり、コネクションができる。

04:01.070 --> 04:05.750
その点数というのは、一般的なゲームでは良いもので、コインを集めるとその点数が増えていくのがわかる。

04:05.750 --> 04:06.440
コイン

04:06.440 --> 04:07.900
だから、とても効果的なんだ。

04:07.910 --> 04:11.350
非常にシンプルな迷路パターンを作ってみました。

04:11.360 --> 04:17.600
また、ベストタイムに興味があるユーザーは、この上をすぐに通過することができる。

04:17.600 --> 04:21.560
この小さな丘を越えて、コーナーを曲がって最速タイムを出すことができる。

04:21.590 --> 04:25.370
また、優勝しても最高得点は出ない。

04:25.370 --> 04:27.830
つまり、選手はこのように見るのではないだろうか。

04:27.860 --> 04:33.950
ゲームをプレイして、おそらくふざけて、最初のタイムをゼロにして負ける。

04:34.130 --> 04:39.320
そしてまたプレイして、コインもいいかもしれないけど、ゴールが大事なんだと気づく。

04:39.320 --> 04:42.020
点数を稼いでゴールする。

04:42.020 --> 04:47.600
そして3回目のプレーでは、制限時間内に可能な限り全てのコインをゲットしようとするかもしれません。

04:47.930 --> 04:49.100
このデモゲームでは

04:49.100 --> 04:54.320
を想像しながら遊んでみてください。

04:54.320 --> 04:58.550
|にできるようにあなたがそれをすることができます本当に出くわすことあなたは、実際には私のパートナーとi約束、誰でも素早くはちょうど無視これらの一見正確にどのように{}人のことを忘れることができます。

04:58.550 --> 05:03.680
だから、それはゲームプレイのデザインに関するちょっとしたメモであり、また、それが良い感じに

05:03.680 --> 05:04.970
試合終了の挨拶

05:04.970 --> 05:05.530
これで終了。

05:05.540 --> 05:06.620
ありがとうございました。

05:07.820 --> 05:10.400
ボーナス課題として、自分で磨きをかけることができます。

05:10.430 --> 05:11.750
こんな感じです。

05:21.810 --> 05:25.290
次のセクションでは、高度なトピックを扱います。
