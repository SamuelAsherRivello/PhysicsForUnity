WEBVTT

00:01.500 --> 00:08.190
このビデオでは、選手と入力を作成し、剛体加算力を使ってキーボード入力を行うことについて説明する。

00:08.190 --> 00:11.440
プログリッドを使って壁を配置します。

00:11.460 --> 00:12.840
タスクの内訳は以下の通り。

00:12.840 --> 00:15.140
クレイジーボールのC-shineスクリプトを追加します。

00:15.150 --> 00:19.220
プログリッドを使って壁要素を配置し、その壁を追加します。

00:19.230 --> 00:21.570
このスクリーンショットが最終目標です。

00:22.390 --> 00:27.550
プロジェクトでは、セクション6、ビデオ2、そしてクレイジーボールを開きます。

00:28.750 --> 00:34.270
このシーンを再生すると、クレイジーボール2になります。

00:34.270 --> 00:34.780
ここで

00:37.070 --> 00:39.230
キーボード入力が出来るようになりました。

00:40.220 --> 00:42.000
ちゃんと壁に跳ね返ります。

00:42.020 --> 00:43.550
では、その設定を見てみましょう。

00:44.240 --> 00:46.370
まずはクレイジーボールです。

00:47.230 --> 00:48.250
クレイジーボール

00:48.250 --> 00:55.060
球体コライダーとデフォルト設定の剛体、そしてカスタム設定のクレイジーボールです。

00:55.060 --> 00:55.930
ボールスクリプト

00:55.960 --> 00:59.060
クレイジーボールスクリプトの動作を見てみましょう。

00:59.080 --> 01:01.750
更新ではキーボード入力をキャプチャします。

01:01.750 --> 01:09.040
Unityの入力クラスを使用し、キーボードの矢印キーとゲームパッドに自動的にマッピングします。

01:09.040 --> 01:10.000
を使用しています。

01:10.000 --> 01:11.560
キーボードだけでいい

01:11.890 --> 01:21.400
そして、最後の入力をキャッシュし、更新のたびに剛体で力を加え、最後の入力を乗算する。

01:21.400 --> 01:22.600
をスピードにかける。

01:22.810 --> 01:28.570
こうすることで、スピードの値によってキーボード入力をよりドラマチックにしたり、そうでなくしたりすることができる。

01:28.600 --> 01:29.830
どう動くか見てみよう。

01:30.680 --> 01:31.850
シーンを実行すると

01:35.430 --> 01:37.500
ここでキーボード入力を使います。

01:37.500 --> 01:39.360
キャラクターを動かします。

01:39.540 --> 01:47.400
例えば、スピードの値を100にすると、最高速度はもっと速くなります。

01:47.400 --> 01:48.660
加速として

01:50.470 --> 01:52.630
これはちょっとパワーがありすぎる。

01:52.660 --> 01:55.390
5という低い値で試してみよう。

01:56.800 --> 01:57.250
これだ

01:57.250 --> 02:02.230
ボールが重く感じるので、どの方向にもキーを持たないといけない。

02:02.230 --> 02:05.110
長い時間、キーを押し続けなければならない。

02:05.650 --> 02:07.750
好きな値を試してみてください。

02:07.780 --> 02:08.910
20がいい。

02:08.920 --> 02:13.720
十分なコントロールができるような気もするし、それでいて、次のようなこともできる。

02:13.720 --> 02:15.400
02:15.400 --> 02:16.560 --> 02:16.560

02:16.560 --> 02:17.010
素晴らしい

02:17.130 --> 02:19.140
ではこの環境について説明しよう。

02:19.500 --> 02:22.170
壁に囲まれてる

02:24.370 --> 02:30.310
各壁の大きさはこのくらいで、すでにメッシュコライダーが設置されています。

02:30.310 --> 02:33.280
あとはこれを好きな位置に配置するだけだ。

02:33.490 --> 02:35.230
どうするか決めよう。

02:35.620 --> 02:38.560
まずは今あるものを取り除く

02:40.050 --> 02:41.610
壁の一部を引っ張り出す

02:48.080 --> 02:48.680
これだ

02:49.270 --> 02:51.830
これで自由に動かせる

02:51.850 --> 02:55.030
かなり正確に動かせているのが分かると思います。

02:55.720 --> 03:00.790
でも、ちょっと隙間ができたり、重なったりする可能性はありますね。

03:00.790 --> 03:06.040
そこで、すでにインポートしてあるプログリッドという素晴らしいツールを使います。

03:06.610 --> 03:14.230
プログリッドをオンにすると、自動的に1つのユニットにスナップします。

03:14.230 --> 03:17.140
を動かすと自動的にスナップされる。

03:17.590 --> 03:22.000
このように、世界各地を移動させると、全体の単位でスナップされるのがわかる。

03:22.300 --> 03:28.300
Macの場合はcontrol dxかcommand dxで複製して移動させる。

03:29.530 --> 03:30.190
このように

03:30.190 --> 03:33.390
隙間が欲しい時は丸ごと一個になりますね。

03:33.400 --> 03:36.250
そうでなければ、オブジェクトの端にスナップする。

03:36.860 --> 03:40.910
複製して一列に並べられる

03:41.210 --> 03:47.090
そして、複製して、回転も使って、好きな位置に配置できる。

03:53.900 --> 03:56.210
そうやってレベルデザインを作り続けるんだ。

04:00.850 --> 04:06.490
グライダーは自動的にメッシュになるので、以下のような機能があります。

04:06.490 --> 04:10.750
(笑)。

04:18.910 --> 04:19.380
以上です。

04:19.390 --> 04:22.420
"移動 "と "壁 "が入力されました。

04:24.640 --> 04:30.550
次のビデオでは、障害物の作成に取り組みます。

04:30.550 --> 04:34.900
次のビデオでは、障害物の作成、移動可能なオブジェクトと移動不可能なオブジェクトの作成、スピニングコインの追加に取り組みます。
