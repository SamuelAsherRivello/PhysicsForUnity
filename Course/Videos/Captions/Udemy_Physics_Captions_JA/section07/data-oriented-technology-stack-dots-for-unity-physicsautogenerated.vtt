WEBVTT

00:01.650 --> 00:06.010
ユニティ物理学のためのデータ指向技術スタック。

00:06.030 --> 00:11.350
このビデオでは、Unity dotsとは何か、そして3つの主な特徴について説明します。

00:11.370 --> 00:15.750
また、dotsがunity physicsの未来にどのような影響を与えるかについても見ていきます。

00:16.470 --> 00:17.820
ドッツとは？

00:18.630 --> 00:22.890
ダンスはデフォルトでパフォーマンスを約束するunityのプロジェクトです。

00:22.920 --> 00:30.360
現在のマルチコアプロセッサとUnityの新しい高性能システムデータ指向を利用しています。

00:30.360 --> 00:31.410
技術スタックです。

00:31.440 --> 00:37.260
ゲームの動作が速くなり、コードが読みやすくなり、他のプロジェクトでも再利用しやすくなります。

00:37.290 --> 00:42.030
Unity Technologiesの無料デモ「megacity」のスクリーンショットをご覧ください。

00:42.030 --> 00:46.380
このシーンは本当に複雑で、いろいろなことが起こっています。

00:46.380 --> 00:52.420
450万のメッシュレンダリングと20万以上のユニークなビルオブジェクトが特徴です。

00:52.440 --> 00:57.400
これはとても複雑で、ドットなしでは不可能なことです。

00:57.420 --> 01:00.180
Unityはツールのコアを再構築しています。

01:00.180 --> 01:05.040
高性能なマルチスレッドドットで各主要システムを再構築しています。

01:05.040 --> 01:11.970
このシステムの特徴は、マルチスレッドコードを実行するためのCシャープジョブシステム、エンティティコンポーネント

01:11.970 --> 01:18.720
このシステムの特徴は，マルチスレッドコードを実行するためのC-sharpジョブシステム，高性能コードを書くためのエンティティコンポーネントシステム，そして最後に高度に最適化されたコードを生成するためのバーストコンパイラです。

01:18.720 --> 01:19.710
ネイティブ・コード

01:20.520 --> 01:22.290
ドットフィジックスとは？

01:22.590 --> 01:27.270
将来的には、ドットの物理学はunity physicsにリブランディングされる予定です。

01:27.270 --> 01:34.500
その哲学は，完全な決定論的剛体力学であり，空間クエリーシステムである。

01:34.500 --> 01:35.070
パフォーマンス

01:35.070 --> 01:41.160
01:35.070→01:41.160.C-嬰 Physicsはシンプルであることを優先し，キャッシュを一切行わないステートレスなユニティとなる。

01:41.160 --> 01:46.140
モジュール化され、他のシステムから切り離され、再利用が奨励される。

01:46.380 --> 01:47.550
パフォーマンスが高い。

01:47.550 --> 01:52.830
市販の物理エンジンと同等以上のパフォーマンスを発揮します。

01:52.830 --> 01:54.570
これはどういう意味なんだ？

01:54.570 --> 01:59.970
このコースで扱う原理は，現在の物理学に関連するものであると同時に，次のような未来の物理学にも関連するものです。

01:59.970 --> 02:06.090
このコースで学ぶ原則は、現在の物理学にも、そして未来の2次元や3次元の物理学にも通用するものです。

02:06.090 --> 02:11.220
Unity Physicsは高速化のための追加オプションとなります。

02:11.930 --> 02:12.530
見てみよう。

02:12.560 --> 02:12.880
ドット

02:12.890 --> 02:14.030
物理の世界

02:14.300 --> 02:16.670
次のステップはすでに終わっています。

02:16.670 --> 02:17.750
しかし、ここからが本番です。

02:17.750 --> 02:21.800
ゼロからプロジェクトを作成したい場合は、まずこのレポをチェックアウトする。

02:21.830 --> 02:27.160
最新のUnityエディタを開き、Unity Physics Examples Projectを開きます。

02:27.170 --> 02:30.950
そして、正しいパッケージがあることを確認し、アップデートします。

02:30.950 --> 02:38.000
パッケージマネージャーを開き、[詳細]をクリックし、[プレビューパッケージを表示]をクリックします。

02:38.000 --> 02:42.020
Unity Physicsを含む必要なパッケージのバージョンを確認します。

02:43.210 --> 02:44.720
デモを見てみましょう。

02:44.740 --> 02:50.350
このコースの他のデモと比べて、このデモは別のプロジェクトにあることに注意してください。

02:50.350 --> 02:52.960
それは、独自のセットアップがあるからです。

02:52.960 --> 02:55.930
シーンを再生し、一緒に検査します。

02:55.930 --> 02:59.950
物理、シェイプ、物理ボディが新しいコンポーネントであることがわかります。

02:59.950 --> 03:06.730
リスタートシーンのコントローラーのコードをチェックし、ドットのためにどのように手を加えたか見てみましょう。

03:06.730 --> 03:10.000
おまけとして、スパナを追加してみました。

03:10.000 --> 03:14.170
物理オブジェクトをたくさん追加して、パフォーマンスを確認してみます。

03:14.620 --> 03:16.830
それではDotsプロジェクトを開いてみましょう。

03:16.840 --> 03:21.710
繰り返しますが、これはこのコースの他の部分で使っているプロジェクトとは異なるものです。

03:21.730 --> 03:24.370
これは特別な設定が必要だからです。

03:24.930 --> 03:32.070
このような場合、「Unity Physics Dots」の例でシーンを実行すると、かなり似たようなセットアップが表示されます。

03:32.160 --> 03:36.810
キューブのスタックを用意しました。以前使ったデモのようなものです。

03:36.840 --> 03:41.910
スペースキーを押してシーンをリロードすることもできます。

03:42.180 --> 03:46.950
そしてシーンを覗いてみると、ここにはもうキューブはありません。

03:47.370 --> 03:53.160
ドットは一時的なもので、シーンが始まると特定のオブジェクトが出現するユニークなものです。

03:53.160 --> 03:54.130
は消えてしまう。

03:54.150 --> 03:55.200
バグではありません。

03:55.200 --> 04:01.620
最適化された方法であり、将来的には階層構造で表現されることになるだろう。

04:02.300 --> 04:08.000
キューブのひとつを見ると、おなじみのコライダーではなく、物理的な形が見える。

04:08.150 --> 04:12.560
また，見慣れた剛体ではなく，物理学的なボディを見ることができる。

04:12.560 --> 04:14.930
つまり、ここでは別の命名法があるわけだ。

04:15.080 --> 04:20.900
しかし、物理学のようなものを持つことができるなど、似たような値を見ることができる。

04:20.900 --> 04:23.030
バウンドの素材など。

04:23.420 --> 04:29.120
他にも、シーンを再スタートさせることができたのですが、その際に少し

04:31.820 --> 04:38.570
ドットのために以前やったシーンのリロードに加え、システムを再起動する必要がある。

04:38.570 --> 04:40.970
シーンのエンティティというものを破壊する。

04:40.970 --> 04:46.700
このように、簡単なステップを踏んだだけなのに、少し考えなければならないことが増えたが、うまくいった。

04:46.700 --> 04:47.180
素晴らしい。

04:48.250 --> 04:54.160
最後に、3000の異なるオブジェクトをスポーンするスポンサーをセットアップしたことを示したい。

04:54.160 --> 04:54.760
(゜Д゜)ゴルァ!

04:55.330 --> 04:57.190
どれくらいのパフォーマンスが出るか見てみましょう。

04:57.520 --> 05:01.780
ここではゲームビューだけを表示してプレイしてみます。

05:02.230 --> 05:04.840
フレームレートカウンターもオンにしてみます。

05:05.170 --> 05:11.830
最初のシーンは1秒間に6フレームか10フレームくらいで、その後

05:11.830 --> 05:13.660
すぐにスピードが上がります。

05:13.690 --> 05:17.410
ワールド内のアイテムのインスタンス化にコストがかかっているのだと思います。

05:17.410 --> 05:20.620
でも、物理演算はとてもうまく動いています。

05:20.650 --> 05:25.900
何千ものオブジェクトが画面上に表示されているのですが、それでもインタラクションは可能です。

05:25.900 --> 05:27.610
フレームレートもいい。

05:27.640 --> 05:32.980
プロジェクトが成熟するにつれて改善されていくと思うが、すでに本当に良いフレームレートを見ることができた。

05:34.150 --> 05:35.040
以上です。

05:35.050 --> 05:37.210
以上、ユニティ・ドッツの概要でした。

05:38.290 --> 05:39.830
これでコースは終了です。

05:39.850 --> 05:41.380
ありがとうございました。
