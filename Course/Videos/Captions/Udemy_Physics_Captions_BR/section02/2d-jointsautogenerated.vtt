WEBVTT

00:01.720 --> 00:04.630
In this video, we'll cover two D joints.

00:04.630 --> 00:09.940
We'll look at what is the joint two RD component and different types of joint to DS.

00:09.940 --> 00:12.550
Then we'll play with these inside the unity ed.

00:13.090 --> 00:21.070
A joint is the component that maintains a relationship either positional or rotational with one or more

00:21.070 --> 00:22.030
game objects.

00:22.030 --> 00:26.740
You can attach your joints to either a game object with a rigid body.

00:26.740 --> 00:30.460
This is common or to a fixed position in world space.

00:30.460 --> 00:32.290
You can see the setup here in the picture.

00:32.290 --> 00:37.960
We've got a game object with three different components the transform and rigid body as we've seen before,

00:37.960 --> 00:39.910
and then we've added the joint component.

00:40.700 --> 00:42.950
When should my game use joints?

00:43.630 --> 00:45.770
Let's talk about some uses for joints.

00:45.980 --> 00:53.210
Typically, physic joints are useful in gaming to maintain a relationship, either positional or rotational

00:53.210 --> 00:55.320
between two or more game objects.

00:55.340 --> 00:58.790
Use joints to mimic reality or to add gameplay.

00:58.940 --> 01:03.020
Imagine creating a hanging chain like the picture we see on the right there.

01:03.020 --> 01:07.340
You can do that with several different game objects connected with hinge joints.

01:07.340 --> 01:08.750
The hinge is very useful.

01:08.750 --> 01:13.310
You could also create a bouncy wooden bridge or a door connected to a wall.

01:13.310 --> 01:18.660
If you wanted a vehicle with suspension, you could use the spring joint and the wheel joint.

01:18.680 --> 01:21.170
There are many types of joints in 2D.

01:21.290 --> 01:23.240
Let's talk about a few of the types.

01:23.240 --> 01:25.520
First of all, there's distance joint to DX.

01:25.550 --> 01:30.530
This is a very simple joint that maintains a certain relationship between two game objects.

01:30.530 --> 01:33.710
That relationship could be the distance between their positions.

01:33.710 --> 01:39.800
It's similar to parenting one game object under another only you don't have this restriction of parenting.

01:39.980 --> 01:45.980
The hinge joint two d fixes a game object to a point in space and allows rotation.

01:46.250 --> 01:52.340
You can think of a bridge like the image in the lower right or a typical door that opens and closes

01:52.340 --> 01:53.180
on a hinge.

01:53.180 --> 01:56.960
There's many types of joints, so how strong is a joint?

01:57.470 --> 01:59.240
It's possible to break joints.

01:59.240 --> 02:03.740
There's something called a constraint, which is a rule which the joint will try to follow.

02:03.740 --> 02:09.980
Some constraints limit behavior such as ensuring a rigid body stays in a certain position.

02:09.980 --> 02:16.520
When the rule is broken temporarily, the joint will apply corrective forces so it can again follow.

02:16.520 --> 02:21.230
The rule breaking is possible when the corrective force needed is too great.

02:21.230 --> 02:26.840
The joint will permanently break the individual joints, stops working forever in your game.

02:26.840 --> 02:31.000
You have to stop and start the scene or the game in order to have it work again.

02:31.010 --> 02:33.920
Excessive linear force is called a brake force.

02:33.920 --> 02:36.860
Excessive torque force is called a brake torque.

02:37.040 --> 02:43.910
The brake force property, it's set to infinity by default so that the joint will never break to allow

02:43.910 --> 02:47.060
breakage, set it to a lower finite value.

02:47.060 --> 02:48.860
For example, 5000.

02:48.860 --> 02:51.650
Sometimes we want our joints to break.

02:51.650 --> 02:52.280
Now why?

02:52.310 --> 02:57.740
First of all, maybe we're mimicking something in reality that is not infinitely strong and we want

02:57.740 --> 03:01.610
it to break or breaking could add to your gameplay experience.

03:01.610 --> 03:07.280
Perhaps your character swings on a chain, but if you swings too strongly, the chain will break.

03:07.980 --> 03:09.710
Let's do some demos together.

03:09.720 --> 03:16.350
The hinge joint to begin scene will create five planks for a bouncy wooden bridge will create a hinge

03:16.350 --> 03:16.710
joint.

03:16.710 --> 03:23.040
Two rd between each plank will create a hinge joint to RD at each end of the bridge to hold it to the

03:23.040 --> 03:23.730
columns.

03:23.730 --> 03:26.370
And then we'll play the scene and see how it goes.

03:26.520 --> 03:27.810
A bonus assignment.

03:27.810 --> 03:31.860
If you want to get deeper into learning about joints, take a look at this scene.

03:31.860 --> 03:33.870
The target joint to begin.

03:33.870 --> 03:36.420
Create a target joint to DH on the crate.

03:36.420 --> 03:43.410
Create your own script called something like Target Joint follows Mouse Play the scene, move your mouse

03:43.410 --> 03:44.550
and observe the result.

03:44.550 --> 03:47.070
Did you get the crate to follow the mouse?

03:47.070 --> 03:52.980
You can set the brake force to 5000 to break the joint if you want help or you want to see the finished

03:52.980 --> 03:57.150
result or the created script of Target Joint follows Mouse.

03:57.150 --> 04:01.770
Take a look at the target joint to DH underscore complete scene.

04:01.770 --> 04:03.870
Everything's there for you to take a look at.

04:06.790 --> 04:10.150
Let's open up our next scene, the hinge joint to begin.

04:11.130 --> 04:13.460
Here we have a ground set up with a couple of columns.

04:13.470 --> 04:15.090
We're going to add a new plank.

04:15.120 --> 04:19.710
Duplicate it five times and use the hinge joint to RD to make a wooden bridge.

04:23.150 --> 04:28.040
Under the Planck sprite will add the rigid body and the collider and the hinge joint.

04:35.340 --> 04:38.220
We'll set the hinge joints anchor to its left side.

04:42.870 --> 04:47.610
We'll place one plank far to the left and then we'll duplicate five times total.

04:47.610 --> 04:49.350
So we have some on the right.

04:55.280 --> 05:01.940
The leftmost plank will leave its connected rigid body set to none, so it's anchored in space for the

05:01.940 --> 05:05.060
others will connect to its nearest neighbor on the left.

05:14.170 --> 05:18.580
And for the rightmost plank, we'll add a second hinge joint hinging it to space.

05:21.970 --> 05:24.130
And adjusting its anchor to the right side.

05:26.550 --> 05:28.050
Let's add some extras.

05:29.260 --> 05:30.280
And give it a try.

05:36.990 --> 05:40.500
In the next video, we'll look at physics for unity sprite shape.
