WEBVTT

00:01.840 --> 00:03.150
Otimizando a física.

00:03.160 --> 00:06.810
Neste vídeo, vamos dar uma olhada em um exemplo de física do mundo real.

00:06.820 --> 00:09.220
Experimentaremos algumas otimizações.

00:09.220 --> 00:12.700
Por fim, melhoraremos drasticamente o desempenho.

00:13.030 --> 00:14.530
Então, vamos otimizar.

00:14.980 --> 00:19.560
Criei uma demonstração com muitas instâncias do mesmo objeto de cadeia.

00:19.570 --> 00:22.810
Você pode ver aqui que estou gerando cerca de 20.000.

00:23.260 --> 00:25.420
O desempenho atual é muito baixo.

00:25.420 --> 00:28.420
São cerca de três quadros por segundo no meu laptop.

00:28.420 --> 00:31.900
É claro que você pode ter um desempenho diferente, dependendo da máquina em que estiver.

00:31.900 --> 00:36.100
Vamos estabelecer uma meta para nós mesmos de obter desempenho em torno de 60 quadros por segundo.

00:36.280 --> 00:38.500
Veremos o que podemos fazer para otimizá-lo.

00:40.620 --> 00:41.980
Vamos dar uma olhada na demonstração.

00:42.000 --> 00:44.720
Utilizaremos a física otimizada para iniciar a cena.

00:44.730 --> 00:50.430
Reproduziremos a cena e, em seguida, iteraremos as otimizações, verificaremos continuamente a taxa de quadros

00:50.430 --> 00:51.480
e veremos como nos saímos.

00:52.110 --> 00:53.790
Muito bem, vamos entrar no projeto.

00:54.300 --> 00:57.150
Então, estamos olhando para a cena inicial otimizada.

00:57.540 --> 01:02.460
O que eu configurei aqui é uma série de links de uma cadeia.

01:02.640 --> 01:04.170
Não é uma corrente com articulações.

01:04.170 --> 01:06.000
Estou usando apenas essas peças.

01:06.000 --> 01:11.460
E se eu abrir esta janela um pouco mais, o Unity tem algumas estatísticas.

01:12.420 --> 01:18.300
Com as estatísticas, podemos ver que à medida que essas peças estão caindo e interagindo com a falha em cada uma delas

01:18.300 --> 01:18.840
outra.

01:18.840 --> 01:25.200
Estamos obtendo uma taxa de quadros em torno de 2,8 a 3 quadros por segundo, o que é muito baixo.

01:25.860 --> 01:28.840
Vamos tentar atingir uma meta de algo como 60 quadros por segundo.

01:28.890 --> 01:30.720
Veja que tipos de alterações podemos fazer.

01:32.070 --> 01:33.990
Portanto, a configuração da cena é bem simples.

01:33.990 --> 01:35.040
Há um piso.

01:35.070 --> 01:40.680
Depois, tenho uma entrada aqui, que estou usando para criar cerca de 20.000 objetos, o que é muito.

01:41.010 --> 01:42.420
Depois, tenho uma cena.

01:43.350 --> 01:46.630
Objeto de jogo configurado chamado Optimized Physics setup.

01:46.650 --> 01:50.200
É um monte de coisas que são comentários ou código que é comentado.

01:50.220 --> 01:51.690
Vamos examinar cada um deles.

01:51.780 --> 01:56.850
Em primeiro lugar, como conselho de teste, isso não torna o projeto realmente mais eficiente, mas proporciona

01:56.850 --> 02:00.270
uma melhor leitura da taxa de quadros na UI da tela.

02:00.390 --> 02:02.550
Acabamos de definir a contagem do V Sync como zero.

02:02.550 --> 02:09.660
Portanto, para a otimização em si, o primeiro grande passo é sempre atualizar o unity para a versão pública mais recente.

02:09.660 --> 02:14.670
Se puder, você terá um desempenho melhor porque a unidade está sempre atualizando todo o sistema

02:14.670 --> 02:18.510
de renderização e física, etc., para que você obtenha resultados realmente excelentes.

02:18.600 --> 02:24.300
Em segundo lugar, enquanto estiver testando, se a taxa de quadros for muito importante para você, considere a possibilidade de construir um

02:24.300 --> 02:29.550
seu dispositivo final, seja uma compilação para Windows ou para iOS ou Android e teste mais de perto

02:29.550 --> 02:37.080
da experiência do usuário final, você obterá um desempenho melhor ou mais próximo do que o

02:37.080 --> 02:39.510
usuário obterá, o que, obviamente, é uma referência importante.

02:40.660 --> 02:43.390
Vamos começar com algumas das coisas que podemos fazer dentro do projeto.

02:43.720 --> 02:48.190
Número três, podemos ir em frente e desativar as sombras na cena.

02:48.220 --> 02:52.450
Também podemos definir o piso da cena como estático, o que é uma alteração física.

02:52.810 --> 03:00.100
Podemos ir ao pré-fabricado da coisa e desativar o colisor de malha e usar um primitivo como um colisor de caixa

03:00.100 --> 03:00.700
em vez disso.

03:00.730 --> 03:03.940
Vamos executar essas três etapas e ver que tipos de alterações obtemos.

03:04.450 --> 03:06.070
Então, em primeiro lugar, com a iluminação.

03:07.270 --> 03:10.660
Temos sombras fortes que são.

03:11.440 --> 03:13.630
Mais eficientes do que as sombras suaves.

03:13.630 --> 03:15.370
Mas vamos tentar sem sombras.

03:15.370 --> 03:16.930
Vamos ver se conseguimos algum efeito aqui.

03:16.930 --> 03:20.620
Algumas dessas coisas podem fazer uma boa diferença, e outras

03:20.620 --> 03:21.490
talvez não.

03:21.880 --> 03:27.970
Então, o que fazemos é clicar com o mouse aqui para acionar o spinner e...

03:28.780 --> 03:30.190
Pelo menos no início.

03:30.190 --> 03:34.330
Quero dizer, com o passar do tempo, ele vai se tornar mais lento porque há mais e mais cálculos.

03:34.330 --> 03:36.490
Mas acho que pode ser um pouco melhor.

03:36.490 --> 03:41.170
Estamos nos aproximando mais de três do que antes, portanto, considere essa opção.

03:42.180 --> 03:44.230
Seu jogo, é claro, pode exigir sombras.

03:44.290 --> 03:45.150
Talvez você não possa fazer isso.

03:45.150 --> 03:49.050
Mas quero apenas salientar que existe uma solução não física para isso.

03:49.200 --> 03:54.120
A próxima coisa que vamos ver é a definição do piso simples, que está sob tudo, definindo

03:54.120 --> 03:55.020
para estático.

03:55.820 --> 04:00.980
Fazer isso pode otimizar o corpo rígido e pode ser capaz de trabalhar com mais eficiência.

04:00.980 --> 04:02.030
Então vamos dar uma olhada.

04:02.650 --> 04:05.660
Então, lembre-se de que estávamos recebendo cerca de três no melhor.

04:06.580 --> 04:07.780
Aqui.

04:10.280 --> 04:11.780
É mais ou menos a mesma coisa.

04:11.780 --> 04:16.010
É possível que haja pequenas alterações, mas isso é algo a ser verificado.

04:16.640 --> 04:19.820
Se você tivesse mais objetos, seria bom definir mais deles como estáticos.

04:19.850 --> 04:21.960
A seguir, vamos dar uma olhada no pré-fabricado thing.

04:21.980 --> 04:25.190
Então, vamos pegar isso e levá-lo para o mundo e aumentar o zoom.

04:25.190 --> 04:28.430
E podemos ver aqui que temos um colisor de malha.

04:28.430 --> 04:35.540
Portanto, se desligarmos o colisor de malha e, em vez disso, adicionarmos um colisor de caixa, podemos ver que o colisor de caixa

04:35.540 --> 04:38.600
faz um bom trabalho ao estimar sua forma de qualquer maneira.

04:38.600 --> 04:43.910
É claro que os cantos não são mais redondos e, dependendo do nosso projeto de jogo, isso pode realmente

04:43.910 --> 04:47.000
pode nos dar um resultado físico suficientemente diferente.

04:47.300 --> 04:52.910
Agora que fiz essa alteração e a salvei no pré-fabricado, vamos ver como ela funciona.

04:55.830 --> 04:58.020
Então, clico com o mouse para iniciar.

05:03.740 --> 05:05.350
Está oscilando em torno de três.

05:06.850 --> 05:09.670
Então, isso pode não ter feito uma grande diferença aqui.

05:10.720 --> 05:16.360
Portanto, vou apenas verificar novamente se essa alteração foi realmente feita.

05:16.660 --> 05:17.880
Tenho um colisor de caixa.

05:17.890 --> 05:19.570
O colisor de malha está desligado.

05:19.780 --> 05:21.550
Vou remover o Collider de malha.

05:21.850 --> 05:23.800
Não sei se isso faz alguma diferença, mas...

05:24.800 --> 05:29.150
Embora tenha sido desativado, estou surpreso por não estarmos tendo um pequeno salto de quadro

05:29.150 --> 05:31.730
ali, um pouco de melhora.

05:35.810 --> 05:37.640
E não parece que isso tenha feito uma grande diferença.

05:37.640 --> 05:39.440
Mas talvez no seu projeto isso aconteça.

05:40.350 --> 05:41.490
Vamos para os próximos passos.

05:42.850 --> 05:43.390
Aqui.

05:43.390 --> 05:47.200
Há vários valores de tempo diferentes que poderemos ajustar.

05:47.410 --> 05:55.990
Agora, com cada um deles, você vai procurar um meio-termo entre a física precisa ou a eficiência

05:55.990 --> 05:56.740
taxa de quadros.

05:56.980 --> 06:01.930
Portanto, podemos ajustá-los e eles continuarão fazendo cálculos, mas talvez com menos frequência

06:01.930 --> 06:03.360
ou com mais frequência do que antes.

06:03.370 --> 06:08.110
Portanto, apenas com esses ajustes, esses são alguns valores com os quais eu brinquei antes e obtive

06:08.110 --> 06:08.890
alguns bons resultados.

06:08.890 --> 06:09.760
Então, vamos dar uma olhada.

06:10.800 --> 06:11.880
Vou correr aqui.

06:15.850 --> 06:16.810
E dar uma olhada.

06:18.030 --> 06:21.570
Isso está fazendo uma grande diferença.

06:21.570 --> 06:24.330
Acho que, neste caso, esta é realmente a chave.

06:25.080 --> 06:28.830
Provavelmente, poderíamos fazer apenas essa alteração e desfazer as outras.

06:28.830 --> 06:31.740
Anteriormente, chegamos a 80, 80 alguns quadros por segundo.

06:31.740 --> 06:35.100
Portanto, atingimos nossa meta de 60, o que é fantástico.

06:35.220 --> 06:39.450
Então, novamente, se você olhar a documentação dessas duas propriedades, poderá aprender um pouco mais

06:39.450 --> 06:41.700
sobre o que elas fazem e por que você pode ajustá-las.

06:41.700 --> 06:46.800
E, dependendo do seu projeto, talvez você não possa ajustá-los exatamente como eu fiz.

06:46.800 --> 06:49.920
Talvez você precise de mais precisão.

06:50.490 --> 06:53.790
Depois, tentei algumas outras coisas que não me ajudaram muito.

06:54.330 --> 07:01.530
Há algumas configurações de física que você pode definir aqui e defini-las, e talvez os valores que eu escolhi

07:01.530 --> 07:04.020
não tenham realmente me dado uma boa diferença.

07:04.020 --> 07:09.060
Portanto, não vou trazer isso para a conversa, mas saiba que há alguns

07:09.060 --> 07:10.050
outros valores ajustados.

07:10.050 --> 07:13.320
E, por fim, há algo nas configurações chamado Adaptive Force.

07:13.320 --> 07:14.550
Vou tentar isso.

07:15.300 --> 07:22.680
Nas configurações do projeto de física, o Physics habilita a força adaptativa.

07:22.680 --> 07:25.110
Ah, já está habilitado em nossa demonstração aqui.

07:25.110 --> 07:30.780
Portanto, ela habilita a força que melhora a estabilidade de pilhas grandes.

07:30.780 --> 07:37.800
Portanto, a estabilidade parece ser um resultado melhor, mas mais lento, porque imagino que haja um cálculo

07:37.800 --> 07:38.160
ali.

07:38.160 --> 07:42.600
Vamos desativá-lo e ver se o desempenho é pior.

07:42.600 --> 07:44.250
O desempenho está melhor.

07:46.400 --> 07:47.630
Ou talvez seja o mesmo.

07:48.320 --> 07:50.840
Portanto, estamos com boa aparência.

07:52.970 --> 07:54.710
Antes.

07:57.000 --> 07:59.230
Sim, eu diria que agora está melhor.

07:59.250 --> 08:03.840
Portanto, não ter o recurso adaptativo ativado é melhor.

08:04.380 --> 08:08.490
É difícil dizer porque, à medida que deixamos o jogo rolar, há mais complexidade na cena.

08:08.490 --> 08:14.250
Portanto, não é científico o fato de estarmos apenas observando a taxa de quadros aqui e fazendo uma avaliação visual.

08:14.250 --> 08:19.830
Mas, no geral, vemos que obtivemos um desempenho muito melhor do que o anterior.

08:20.620 --> 08:20.890
Agora.

08:20.890 --> 08:23.320
E, claro, estamos com 20.000 objetos.

08:23.320 --> 08:29.950
Portanto, também é bom para o seu jogo se você estiver tendo problemas com a taxa de quadros, talvez complicando

08:29.950 --> 08:35.680
o problema com mais obstáculos, mais níveis em seu design de níveis.

08:36.160 --> 08:41.980
Veja se você consegue torná-lo mais lento, então cada uma dessas pequenas mudanças criará um quadro mais dramático

08:41.980 --> 08:44.470
e então você entenderá.

08:44.470 --> 08:45.790
Ok, esse recurso ajuda.

08:45.790 --> 08:46.830
Este recurso não ajuda.

08:46.840 --> 08:51.880
Então, quando você remove a complexidade, você volta a ter uma taxa de quadros mais estável e, novamente, isso

08:51.880 --> 08:53.950
representa o jogo que você deseja.

08:53.950 --> 08:55.090
Então é isso.

08:55.390 --> 09:00.520
Você também pode dar uma olhada na cena completa de física otimizada para ver exatamente o mesmo resultado final.

09:00.520 --> 09:04.600
Mas, como você está experimentando, se quiser entrar no jogo, brinque e depois compare,

09:04.600 --> 09:05.400
você pode fazer isso.

09:05.410 --> 09:06.140
Então é isso.

09:06.160 --> 09:07.030
Muito obrigado.

09:09.720 --> 09:14.010
No próximo vídeo, daremos uma olhada na previsão da trajetória da física.
