WEBVTT

00:01.610 --> 00:04.110
Seção 7 - Tópicos Avançados.

00:04.130 --> 00:10.400
Nesta seção, abordaremos as melhores práticas com a física, otimizando a física, prevendo a física

00:10.400 --> 00:13.550
trajetória, bem como a tecnologia orientada a dados.

00:13.550 --> 00:16.400
Pilha de pontos de palavras para física de unidade.

00:17.460 --> 00:19.350
Melhores práticas com física.

00:19.590 --> 00:23.800
Neste vídeo, abordaremos as práticas recomendadas que você deve seguir.

00:23.820 --> 00:30.750
Veremos as etapas ineficientes que devem ser evitadas e analisaremos a melhor configuração de projeto para obter o melhor desempenho.

00:31.380 --> 00:33.780
Pegadinhas, o que fazer e o que não fazer.

00:33.810 --> 00:38.010
Gotchas são as dicas úteis, que nem sempre são óbvias durante o desenvolvimento.

00:38.010 --> 00:43.800
DOS são as práticas recomendadas que nos proporcionam resultados satisfatórios, e a lista de "don't" são as coisas a serem evitadas

00:43.800 --> 00:47.400
porque criam gargalos ou desempenho ruim.

00:47.400 --> 00:48.900
Algumas pegadinhas gerais.

00:48.900 --> 00:52.800
Em primeiro lugar, quando estiver configurando o seu projeto, imite a escala mundial.

00:52.800 --> 00:57.330
Um problema comum quando se começa a usar corpos rígidos é que as coisas parecem estar em câmera lenta.

00:57.330 --> 01:01.080
Na verdade, isso se deve apenas à escala das configurações de gravidade padrão.

01:01.080 --> 01:08.430
Suponha que você tenha unidades correspondentes a duas unidades de altura para um ser humano ou quatro unidades de comprimento para um carro.

01:08.430 --> 01:11.610
Portanto, tente usar essas escalas que estão bem próximas disso.

01:11.610 --> 01:12.630
Determinismo.

01:12.630 --> 01:16.710
De modo geral, a física da unidade atual não é determinista.

01:16.710 --> 01:23.190
Isso significa que ela não repetirá exatamente o mesmo resultado em todas as máquinas, todas as vezes.

01:23.190 --> 01:27.560
Isso se deve à forma como diferentes compiladores e processadores implementam a matemática.

01:27.570 --> 01:31.950
No entanto, no futuro, a física Unity dots promete determinismo.

01:32.190 --> 01:35.940
Alguns dos gerais escolhem DD versus três d de forma inteligente.

01:35.940 --> 01:40.410
Se estiver fazendo um projeto 2D, não use os componentes físicos tridimensionais.

01:40.410 --> 01:46.590
É um exagero usar a estática para cada objeto de jogo ou para cada objeto em um projeto.

01:46.590 --> 01:47.940
Defina-os como estáticos.

01:47.940 --> 01:49.530
Se notar que eles não estão se movendo.

01:49.530 --> 01:52.410
Este é o piso dos elementos da plataforma de fundo.

01:52.410 --> 01:54.030
É uma ótima otimização.

01:54.030 --> 02:00.360
Em seguida, mantenha a sua escala em um Se você puder tentar manter a escala dos seus objetos em uma escala que maximize a

02:00.360 --> 02:06.510
desempenho para movimentos de corpo rígido e articulações Use a posição de movimento de corpo rígido e a rotação de movimento em vez disso

02:06.510 --> 02:09.330
do acesso ou uso de transformação direta.

02:09.330 --> 02:10.800
Adicione força e adicione torque.

02:10.800 --> 02:17.790
Como falamos anteriormente, as articulações usam pequenas diferenças menores do que dez vezes diferentes nas massas

02:17.790 --> 02:23.640
entre os componentes do corpo rígido que lhe darão resultados mais suaves, coisas que você não deve fazer em um

02:23.640 --> 02:24.240
sentido geral.

02:24.270 --> 02:30.240
Evite fazer alterações de rotação ou escala porque isso recria os colliders e é caro.

02:30.270 --> 02:37.860
Não use colisores de malha se você puder se safar com isso, use esses colisores primitivos mais simples, box sphere,

02:37.860 --> 02:43.800
etc. Se puder, adicione vários, pois os colisores de malha são muito caros para operar e evite usar

02:43.800 --> 02:46.350
colisores de roda, eles também são muito caros.

02:46.620 --> 02:51.990
Algumas dicas de reformulação para usar a menor quantidade de aumento possível para realizar o trabalho.

02:51.990 --> 02:56.820
Tente ser específico usando máscaras de camada em seus ray casts - coisas que não devem ser feitas.

02:56.850 --> 02:59.670
Não estenda o comprimento dos raios mais do que o necessário.

02:59.790 --> 03:05.670
Se você sabe mais ou menos que o seu nível é de 100 unidades, tente definir esse valor como o máximo para não fazer a varredura

03:05.670 --> 03:07.920
para o infinito, o que é caro.

03:07.920 --> 03:10.890
E não use o Ray cast contra o Mesh Collider.

03:10.890 --> 03:12.330
É muito caro.

03:13.780 --> 03:16.360
Algumas boas dicas para a configuração do Unity Project.

03:16.360 --> 03:18.720
Otimize a matriz de colisão de camadas.

03:18.730 --> 03:20.620
Você pode vê-la na parte inferior da captura de tela.

03:20.620 --> 03:23.200
Por padrão, tudo colide com tudo o que você conhece.

03:23.200 --> 03:27.400
Depois de configurar o projeto, vá em frente e desmarque as caixas que não são necessárias.

03:27.400 --> 03:32.980
Isso levará a melhores resultados para o uso do ragdoll, massa igual para todos os corpos rígidos.

03:32.980 --> 03:37.480
Evite usar pequenos intervalos de limite, como cinco ou 15 ou mais.

03:37.480 --> 03:39.540
É melhor se for instável.

03:39.550 --> 03:43.690
Atualize as iterações padrão do solver usando 20 ou mais.

03:44.600 --> 03:50.690
Algumas configurações do projeto na área de tempo ajustam o passo de tempo fixo para chegar a um bom compromisso

03:50.690 --> 03:56.540
entre a precisão, que é um valor alto, e a CPU gasta com a física, que é um valor baixo.

03:56.570 --> 04:02.120
Você pode ver que se ajustarmos para 0,1, isso significa que ainda estamos recebendo dez atualizações de física

04:02.120 --> 04:03.810
por segundo e isso é muito bom.

04:03.830 --> 04:10.190
Ajuste também o registro de data e hora máximo permitido, use de 8 a 10 para limitar o tempo gasto com a física no seu pior

04:10.190 --> 04:11.210
cenário de caso.

04:11.920 --> 04:18.160
Use o profiler do unity periodicamente, mesmo durante o desenvolvimento inicial, abra-o e investigue

04:18.160 --> 04:20.150
quais são os grandes picos de desempenho que você tem.

04:20.170 --> 04:24.250
Procure por avisos para também mostrar um aviso lá.

04:24.250 --> 04:29.710
Se, por exemplo, você mover acidentalmente algo marcado como estático, o que é possível na jogabilidade, mas

04:29.710 --> 04:30.910
realmente caro.

04:32.500 --> 04:36.160
No próximo vídeo, falaremos sobre a otimização da física.
