WEBVTT

00:01.630 --> 00:03.160
Criando os obstáculos.

00:03.550 --> 00:08.720
Neste vídeo, abordaremos a criação de novos obstáculos usando eventos de colisão para detecção de acerto.

00:08.740 --> 00:14.930
Também veremos como documentar a saúde dos objetos danificados e como usar um evento de unidade para comunicação.

00:14.950 --> 00:20.620
Também trocaremos os sprites na renderização de sprites para mostrar quando um objeto está danificado.

00:21.220 --> 00:22.360
Criando os obstáculos.

00:22.360 --> 00:24.340
Esta é uma divisão de tarefas aqui.

00:24.400 --> 00:29.140
Vamos criar o pré-fabricado Duck perturbado e o script C-sharp.

00:29.170 --> 00:33.080
Junto com o prefab do pato perturbado, adicionaremos um script de item mundial.

00:33.100 --> 00:38.920
Em seguida, adicionaremos o script Create Prefab e o Crate e, finalmente, daremos uma olhada em uma versão muito básica

00:38.920 --> 00:41.560
do script do jogo do pato chateado.

00:41.800 --> 00:44.070
Nossa imagem alvo é mostrada aqui.

00:44.080 --> 00:49.360
Já temos a catapulta e outros gráficos, mas vamos acrescentar os patos e as caixas

00:49.360 --> 00:50.110
desta vez.

00:50.620 --> 00:55.810
Então, abriremos o projeto Section five Video three e veremos a cena.

00:55.810 --> 00:57.340
Patos chateados três.

00:57.910 --> 00:59.380
Vamos abrir a unidade aqui.

01:00.110 --> 01:02.900
Vamos dar uma olhada nos três Patos chateados.

01:03.690 --> 01:06.810
Agora, nesta cena, temos a configuração familiar.

01:06.810 --> 01:09.540
Mas agora temos uma pirâmide de caixas, o que é novo.

01:09.540 --> 01:13.290
E também as aves propriamente ditas, que são os patos chateados.

01:13.290 --> 01:15.200
Podemos ir em frente e acertá-los.

01:15.210 --> 01:21.750
O cara se agita um pouco e eu consigo acertar o caixote e o riacho é atingido com força suficiente.

01:21.750 --> 01:23.040
Ele desaparece.

01:23.040 --> 01:26.210
Você pode ver que eles reagem com uma pequena expressão facial e outras coisas.

01:26.220 --> 01:27.690
Então, vamos ver como configurar isso.

01:28.690 --> 01:33.940
Se olharmos dentro do mundo, os itens aqui, que são as próprias docas e os caixotes.

01:34.090 --> 01:39.100
Se olharmos para uma caixa, ela tem o seguinte sprite renderizado.

01:39.250 --> 01:48.010
Caixa de corpo rígido Item do mundo Collider e item do mundo Crate é o que gerencia a saúde e eu fui danificado.

01:48.010 --> 01:50.050
A caixa ouve isso.

01:50.050 --> 01:53.020
Recebi uma mensagem de dano e ela decide o que fazer a respeito.

01:53.020 --> 01:59.080
Nesse caso, ela vai desaparecer. Se houver muito dano no futuro, o vídeo vai

01:59.590 --> 02:00.640
explosão também.

02:01.150 --> 02:07.540
Como o engradado está montado, assim como o pato, o pato será criado do zero aqui.

02:07.540 --> 02:09.520
Portanto, ele tem um sprite de configuração semelhante.

02:09.520 --> 02:13.450
Renderize um collider como um corpo rígido para DX.

02:14.260 --> 02:16.080
Item do mundo e pato chateado.

02:16.090 --> 02:16.870
Mesma regra.

02:17.170 --> 02:21.970
O item do mundo gerencia a saúde e os danos e o pato perturbado decide o que fazer a respeito.

02:22.150 --> 02:24.820
Portanto, vamos nos livrar desses patos irritados.

02:26.380 --> 02:28.870
E vamos nos livrar do pato chateado pré-fabricado.

02:29.820 --> 02:31.570
Em seguida, criaremos um do zero.

02:35.770 --> 02:40.630
Portanto, temos aqui várias molduras diferentes que vou optar por utilizar.

02:41.740 --> 02:42.970
O.

02:44.300 --> 02:45.410
Este ídolo.

02:46.850 --> 02:50.300
E então eu vou adicionar os componentes necessários que queremos.

03:01.950 --> 03:03.180
No item do mundo.

03:05.700 --> 03:08.160
Portanto, temos o item world.

03:09.380 --> 03:11.570
E então eu arrastarei o transtorno.

03:14.210 --> 03:16.100
Bem, nos dê um nome e faça um prefab.

03:26.770 --> 03:27.130
Está bem.

03:27.550 --> 03:31.480
Vamos dar uma olhada no script do upset duck e no script do item do mundo.

03:31.480 --> 03:36.880
Acho que podemos ver que o script do upset duck quer uma referência ao item do mundo.

03:38.200 --> 03:40.360
E uma referência ao renderizador de sprite.

03:41.660 --> 03:45.410
E depois uma referência a alguns dos diferentes.

03:46.360 --> 03:47.160
Sprites que temos.

03:47.170 --> 03:51.490
Portanto, se executarmos este, podemos escolher.

03:56.190 --> 03:58.170
Vamos escolher o.

03:59.530 --> 04:00.820
Herói.

04:01.580 --> 04:09.830
E, em seguida, o herói um e o herói para onde ele está parecendo ter sido atingido muito mal.

04:09.830 --> 04:10.550
Ele está morto ali.

04:11.270 --> 04:13.280
E vamos dar uma olhada em cada um desses roteiros.

04:14.200 --> 04:20.080
Portanto, no item do mundo, o interessante é que usamos um evento de unidade aqui para passar um float de quanto foi

04:20.080 --> 04:21.040
Eu danifiquei?

04:21.460 --> 04:25.720
Depois, aqui embaixo, dentro do evento de colisão, entre.

04:26.320 --> 04:29.480
Verificamos a velocidade da colisão.

04:29.500 --> 04:33.970
Se for muito pequena, pulamos fora e voltamos para fazer qualquer outro código.

04:34.360 --> 04:41.410
Se for um dano suficientemente grande, calculamos e diminuímos a saúde e depois usamos a saúde

04:41.410 --> 04:47.710
invocamos o dano para enviar um evento para qualquer escopo que se importe e que possa ouvir.

04:48.100 --> 04:53.920
Então, se olharmos para o script do upset duck em si, o que fazemos de interessante aqui no início é

04:53.920 --> 04:56.420
adicionamos um ouvinte a essa alteração de saúde.

04:56.440 --> 05:02.380
Agora, o script do pato chateado pode estar aqui sempre que a saúde mudar no item do mundo, é assim que é

05:02.380 --> 05:02.950
configurado.

05:02.950 --> 05:04.750
É assim que o evento de unidade funciona.

05:05.110 --> 05:11.650
Então, aqui embaixo, quando ele muda, ele é capaz de mudar para o sprite morto no caso de a saúde

05:11.650 --> 05:19.420
estiver muito baixa ou pode mudar temporariamente para o segundo dos quadros em que ele foi atingido.

05:19.420 --> 05:25.900
Mas ele não está totalmente morto nesse script aqui embaixo, na parte inferior, apenas transforma o Sprite render ou Sprite

05:25.900 --> 05:31.210
para um, e depois de alguns segundos, na verdade, depois de alguns milissegundos, porque eles têm

05:31.210 --> 05:35.800
um pequeno valor lá, ele então voltará para o sprite ocioso.

05:36.100 --> 05:38.740
Então, vamos dar uma olhada em como isso funciona.

05:40.240 --> 05:43.620
Então, vamos pegar o nosso cara aqui.

05:43.630 --> 05:47.290
Vamos duplicar alguns deles e executar a cena.

05:52.400 --> 05:54.290
Então, observe quando eu clicar.

05:58.120 --> 06:00.580
Você pode ver que a orientação está um pouco errada.

06:00.580 --> 06:03.400
Podemos ajustar isso e ajustar as direções e outras coisas.

06:03.760 --> 06:04.750
Tudo bem.

06:04.810 --> 06:10.840
O que eu quero lhe mostrar é que, ao serem atingidos, eles batem um pouco e, se forem atingidos demais, eles se mexem,

06:10.840 --> 06:13.060
então seus olhos se projetam para fora.

06:14.650 --> 06:15.370
E é isso.

06:15.400 --> 06:16.600
Muito obrigado.

06:20.360 --> 06:26.600
Ah, mais uma coisa que quero mostrar aqui é que o script do upset duck, que se dermos uma olhada nele,

06:26.660 --> 06:28.690
tem muito pouca coisa nele.

06:28.760 --> 06:35.030
O que ele faz aqui é adicionar o asteroide no START, então ele coloca um na catapulta e depois o

06:35.030 --> 06:35.510
caixa.

06:35.510 --> 06:40.070
Quando as caixas sofrem muitos danos, a caixa pode dizer: "Ei, você quer me destruir?

06:40.070 --> 06:42.050
E a caixa passará por si mesma.

06:42.050 --> 06:43.910
E então aqui fazemos a destruição.

06:44.120 --> 06:45.050
Então é isso.

06:45.820 --> 06:46.570
Então é isso.

06:46.600 --> 06:47.560
Muito obrigado.

06:48.720 --> 06:52.500
No próximo vídeo, daremos uma olhada na adição de condições de ganho e perda.
