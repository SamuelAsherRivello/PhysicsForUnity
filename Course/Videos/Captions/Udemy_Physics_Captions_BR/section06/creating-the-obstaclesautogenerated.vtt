WEBVTT

00:01.780 --> 00:03.200
Criando os obstáculos.

00:03.220 --> 00:08.950
Neste vídeo, abordaremos a criação de objetos móveis e imóveis e adicionaremos moedas giratórias que

00:08.950 --> 00:10.650
são colecionáveis pelo jogador.

00:10.660 --> 00:12.100
Aqui está o detalhamento da tarefa.

00:12.100 --> 00:18.140
Adicionaremos o pré-fabricado móvel do cubo e adicionaremos o pré-fabricado imóvel do cubo junto com seu script.

00:18.160 --> 00:23.260
Adicionaremos um prefab de moeda e seu script para lidar com o giro e a coleta pelo jogador.

00:23.410 --> 00:27.190
Para o projeto, abriremos a seção seis, o vídeo três e a cena.

00:27.190 --> 00:28.390
Crazy Ball três.

00:28.780 --> 00:30.310
Muito bem, aqui estamos dentro do Unity.

00:30.670 --> 00:33.890
Vamos em frente e abrir nossa cena do Crazy Ball Three.

00:33.910 --> 00:34.810
Dê uma olhada.

00:35.470 --> 00:38.980
O que há de novo aqui é que temos objetos dentro das paredes.

00:38.980 --> 00:40.870
Temos plataformas diferentes.

00:40.870 --> 00:44.350
Temos diferentes objetos móveis e imóveis.

00:44.350 --> 00:49.090
Portanto, não posso mover os cubos mais escuros e posso mover os cubos mais claros.

00:49.090 --> 00:51.070
Assim, isso apenas proporciona uma pequena variedade visual.

00:51.280 --> 00:56.170
Além disso, como estou coletando essas moedas, você pode ver que eu colido com elas e elas desaparecem.

00:56.290 --> 00:58.240
Portanto, elas desaparecem instantaneamente.

00:58.240 --> 01:01.990
E, é claro, eles estão girando apenas para um efeito visual agradável.

01:02.540 --> 01:04.850
E também projetam sombras, o que é legal.

01:04.870 --> 01:08.500
Então, vamos nos concentrar em como a moeda está configurada.

01:08.530 --> 01:10.570
Vamos fazer isso juntos a partir do zero.

01:10.690 --> 01:12.580
Então, aqui estamos.

01:12.790 --> 01:15.040
Vamos dar uma olhada no.

01:18.290 --> 01:20.030
Pegue o objeto protótipo.

01:20.660 --> 01:21.440
Apenas verifique novamente.

01:21.440 --> 01:24.350
Quando virmos isso, vou arrastar o objeto certo.

01:26.390 --> 01:30.410
Certo, então vamos falar sobre a conversão disso em nossa moeda.

01:31.070 --> 01:34.400
Então, em primeiro lugar, queremos que ela fique um pouco mais alta do chão.

01:35.350 --> 01:36.460
Você poderia fazer uma ligação.

01:36.460 --> 01:40.510
Se esse for o tamanho certo para nós, vou dizer que queremos que ele seja um pouco menor.

01:42.270 --> 01:43.920
Então eu diminuo a escala.

01:45.130 --> 01:48.290
Verificando a escala em relação ao tamanho do nosso personagem.

01:49.230 --> 01:50.550
Acho que ficou muito bom.

01:50.850 --> 01:52.830
Depois, tenho uma configuração de textura dourada.

01:52.830 --> 01:53.910
Podemos usar isso.

01:54.870 --> 01:58.050
Muitas vezes, nos jogos, queremos que nossas moedas se pareçam com moedas de ouro.

01:58.050 --> 02:00.270
Portanto, usaremos essa mesma aparência.

02:01.170 --> 02:03.480
E então vamos colocar o código em funcionamento.

02:03.480 --> 02:07.710
Então, eu já criei um script para.

02:08.970 --> 02:10.770
A rainha.

02:11.430 --> 02:14.100
E para fazer isso, precisamos de um colisor também.

02:15.620 --> 02:21.890
Portanto, vou adicionar um colisor de caixa e posso dar uma olhada no colisor de caixa só para garantir

02:21.890 --> 02:22.670
que ele está dimensionado.

02:22.670 --> 02:23.000
Certo?

02:23.000 --> 02:24.740
Mas parece muito bom para mim.

02:25.340 --> 02:28.220
E então vamos dar uma olhada no nosso script de moeda.

02:28.640 --> 02:31.460
Esta é realmente a maior parte do nosso trabalho aqui, alguns scripts.

02:31.820 --> 02:37.820
Então, na moeda, em primeiro lugar, eu rastreio se ela está viva ou não, eu a defino como verdadeira.

02:37.850 --> 02:42.920
Agora, normalmente você pode manter a quantidade de comportamento vivo e simplesmente excluí-lo quando estiver pronto para ele

02:42.920 --> 02:43.810
não esteja mais ativo.

02:43.820 --> 02:46.580
Mas aqui eu precisava deste touro por uma razão extra.

02:46.860 --> 02:47.990
Falarei sobre isso em um segundo.

02:48.290 --> 02:51.010
Então, na atualização, eu giro os gráficos.

02:51.020 --> 02:55.610
Estou fazendo a rotação com base em quanto eu quero que ele gire por quadro.

02:55.610 --> 02:58.920
E estou usando uma classe de constantes de bola maluca para lidar com isso.

02:58.970 --> 03:03.630
Então, aqui eu tenho algumas variáveis isoladas para que seja realmente fácil de ajustar.

03:03.650 --> 03:09.080
Assim, você pode ver que as unidades vão se deslocar na direção Y a cada quadro.

03:10.060 --> 03:11.140
De volta à moeda.

03:12.820 --> 03:16.840
Ouvir algo de fora vai chamar isso de público, me destruir.

03:16.840 --> 03:22.090
E o que vai acontecer internamente é que vou usar o que está vivo para comercializar o falso, e então eu imediatamente

03:22.090 --> 03:23.410
destruo o objeto do jogo.

03:23.440 --> 03:29.530
Ainda não é muito óbvio por que estou usando isso como um live, mas em um vídeo futuro veremos isso

03:29.530 --> 03:31.450
em vez de destruí-lo instantaneamente.

03:31.450 --> 03:36.400
Como agora, vou usar um movimento programático para que ele desapareça lentamente para dar um pouco de polimento.

03:36.400 --> 03:38.260
Portanto, esta é apenas a configuração para isso.

03:38.260 --> 03:41.920
Agora, como detectamos a bola e a moeda?

03:41.920 --> 03:47.710
Bem, eu optei por colocar isso dentro da bola maluca aqui, então vamos usar o trigger enter.

03:47.710 --> 03:54.520
Portanto, é importante que eu vá para o coins Collider e defina o trigger.

03:54.520 --> 04:00.850
Assim, ao definir esse gatilho aqui, a bola maluca, quando entrar no mesmo colisor

04:00.850 --> 04:04.210
área do colisor que a moeda, o acionador enter será disparado.

04:04.210 --> 04:09.340
Eu poderia optar por colocar esse gatilho, inserir o código dentro da moeda ou dentro da bola.

04:09.340 --> 04:10.630
Qualquer um dos dois está bom.

04:10.630 --> 04:16.750
Sei que, no futuro deste jogo, quero que a bola maluca colida com vários tipos diferentes de

04:16.750 --> 04:17.380
objetos.

04:17.380 --> 04:19.840
Portanto, vou colocar tudo isso aqui no mesmo local.

04:19.840 --> 04:21.640
Portanto, este é o local ideal para mim.

04:21.640 --> 04:24.100
Então, aqui eu detecto e coleto a moeda.

04:24.190 --> 04:28.330
Verifico a etiqueta do objeto com o qual estou colidindo para ter certeza de que é a etiqueta da moeda.

04:28.480 --> 04:30.250
Dê uma olhada nessa variável.

04:30.250 --> 04:31.600
É apenas coin.

04:31.600 --> 04:37.120
E quando eu for aqui e configurar este mundo, é importante que eu defina a etiqueta como coin.

04:38.150 --> 04:45.320
Depois, aqui na bola maluca, verifico se o objecto de jogo com o qual colide tem a etiqueta

04:45.320 --> 04:47.930
componente do game object chamado coin?

04:47.960 --> 04:52.700
É claro que tem, devido à forma como construí isso, mas é uma boa ideia verificar se é

04:52.700 --> 04:56.000
null e depois ver se ainda está vivo?

04:56.000 --> 04:57.940
Se sim, me destrua dessa forma.

04:57.950 --> 05:05.330
Quando adicionarmos um efeito programático enquanto a moeda está se dissolvendo, talvez encolhendo, eu não quero

05:05.330 --> 05:08.300
colidir com ela de novo e de novo e de novo enquanto ela estiver encolhendo.

05:08.300 --> 05:09.260
Então eu coloco a tag.

05:09.260 --> 05:10.640
É um falso vivo.

05:10.640 --> 05:13.310
Assim, não vou desencadear isto repetidamente.

05:13.310 --> 05:16.580
Portanto, o destroy me é executado exatamente uma vez para cada um.

05:16.580 --> 05:17.630
Então é isso?

05:17.630 --> 05:18.890
É assim que está configurado.

05:18.890 --> 05:21.290
Posso prosseguir e executar a cena agora.

05:23.840 --> 05:27.800
E executar a cena e ela desaparecerá perfeitamente.

05:29.270 --> 05:29.960
É isso aí.

05:32.070 --> 05:35.370
No próximo vídeo, abordaremos a adição de condições de ganho e perda.
