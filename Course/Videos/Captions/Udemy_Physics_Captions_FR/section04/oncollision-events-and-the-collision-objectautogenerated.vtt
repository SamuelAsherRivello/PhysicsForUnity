WEBVTT

00:00.660 --> 00:01.770
Section quatre.

00:01.930 --> 00:02.370
Unité.

00:02.420 --> 00:04.170
Programmation physique en C-sharp.

00:04.200 --> 00:10.470
Dans cette section, nous aborderons la gestion des événements physiques pour les collisions et les déclenchements, l'ajout de forces physiques...

00:10.470 --> 00:11.560
pour déplacer des objets.

00:11.580 --> 00:15.690
Nous aborderons les propriétés et les fonctions physiques les plus courantes et les plus utiles.

00:15.690 --> 00:20.940
Et nous verrons le débogage de la physique sur les événements de collision et l'objet collision.

00:20.970 --> 00:24.300
Dans cette vidéo, nous aborderons la récapitulation du cycle de vie de la physique.

00:24.300 --> 00:26.700
Ensuite, nous nous pencherons sur les événements de collision.

00:26.700 --> 00:28.020
Pourquoi sont-ils utiles ?

00:28.020 --> 00:33.870
Ensuite, nous ouvrirons l'éditeur Unity et nous jouerons avec les événements de collision, en visualisant la physique recommandée,

00:33.870 --> 00:40.350
La physique du cycle de vie, la simulation et la dilatation temporelle introduisent les principes fondamentaux de la physique, les événements,

00:40.620 --> 00:42.210
physique, cycle de vie Recap.

00:42.210 --> 00:48.360
Comme nous l'avons vu dans les sections précédentes, les événements de collision sont appelés Lorsque le collisionneur en croise un autre

00:48.360 --> 00:55.560
nous utilisons la méthode on collision enter à l'intérieur d'un comportement, et nous remarquons que nous passons le cap des

00:55.560 --> 00:58.530
l'objet collision sur les événements de collision.

00:58.530 --> 00:59.820
Regardons de plus près.

00:59.820 --> 01:00.900
Pourquoi les utiliser ?

01:00.900 --> 01:02.730
Tout d'abord, sur les événements de collision ?

01:02.730 --> 01:05.640
Donnez-nous plus d'informations sur les collisions physiques.

01:05.640 --> 01:09.720
Il s'agit de collisions entre des corps rigides et des collisionneurs.

01:09.720 --> 01:11.580
Quand est-ce que trigger est mis à false ?

01:11.580 --> 01:16.980
Les exemples les plus courants sont lorsqu'une balle touche un ennemi ou lorsqu'un personnage ramasse une pièce de monnaie.

01:16.980 --> 01:20.100
Examinons le scénario d'un événement de collision.

01:20.100 --> 01:24.450
Imaginons qu'un cube rose tombe vers le bas en direction d'un cube bleu.

01:24.450 --> 01:27.030
Chacun d'eux possède un corps rigide et un collisionneur.

01:27.030 --> 01:29.220
Avec le collider, le trigger est fixé à false.

01:29.220 --> 01:30.480
Le rose tombe.

01:30.480 --> 01:33.480
Le rose entre en collision et déclenche un on collision.

01:33.480 --> 01:35.730
Enter pink reste dans la collision.

01:35.730 --> 01:42.810
Maintenant, pour chaque image qu'ils touchent, un stay on collision sera appelé lorsque pink sortira.

01:42.810 --> 01:45.600
La collision sera déclenchée une seule fois lors de la sortie de la collision.

01:45.600 --> 01:47.070
Puis la rose continue de tomber.

01:47.100 --> 01:49.490
Nous nous concentrons sur l'entrée de la collision.

01:49.500 --> 01:55.050
Cela nous permet de capturer la balle qui touche un ennemi ou le personnage qui ramasse une pièce de monnaie.

01:55.080 --> 02:00.570
L'objet de collision qui entre dans cette méthode nous donne plus d'informations sur la collision.

02:00.570 --> 02:05.640
Nous pouvons demander à l'objet de jeu Collision Qu'avons-nous heurté ou quels sont les contacts de collision ?

02:05.640 --> 02:08.700
Où la collision s'est-elle produite exactement dans le monde 3D ?

02:08.700 --> 02:10.620
Voyons donc ce que nous avons heurté.

02:10.620 --> 02:15.990
Nous pouvons vérifier le nom de l'objet de collision et voir s'il correspond à ce que nous recherchons.

02:16.020 --> 02:18.150
C'est bien pour des vérifications très spécifiques.

02:18.150 --> 02:21.540
Nous pouvons utiliser la balise pour toute une catégorie de vérifications.

02:21.540 --> 02:22.440
Nous pouvons vérifier.

02:22.440 --> 02:26.700
Cette pièce entre-t-elle en collision avec l'une des pièces étiquetées coin ?

02:26.700 --> 02:27.870
Une alternative ?

02:27.870 --> 02:31.470
Pour les contrôles catégoriels, nous pouvons également vérifier la couche.

02:31.470 --> 02:35.760
Avons-nous trouvé quelque chose avec un calque réglé sur les balises et les calques du sol ?

02:35.760 --> 02:36.960
Les deux peuvent être utilisés ici.

02:36.960 --> 02:38.370
Un point à noter.

02:38.370 --> 02:42.450
Nous pouvons avoir zéro ou une balise ou couche sur chacun de nos objets.

02:42.450 --> 02:47.670
Cependant, nous avons un nombre illimité de balises dans un projet, mais seulement 31 couches.

02:47.760 --> 02:50.790
Remarquez également que les calques sont beaucoup plus rapides que les balises.

02:50.790 --> 02:56.040
Donc, si vous n'avez pas beaucoup de calques et que vous voulez bénéficier d'une augmentation de la vitesse, allez-y et utilisez les calques.

02:56.040 --> 03:00.000
Si vous avez beaucoup de combinaisons différentes à vérifier, les balises vous conviendront peut-être mieux.

03:00.000 --> 03:06.120
Vous pouvez ouvrir et gérer le menu unity, Edit Project Settings, Tags and Layers.

03:06.450 --> 03:08.190
Passons maintenant à la démo.

03:08.520 --> 03:12.540
Nous allons examiner les événements de collision, une et deux scènes.

03:12.540 --> 03:16.050
Nous allons jouer la scène et inspecter le code ici.

03:16.080 --> 03:16.950
A l'intérieur d'Unity.

03:16.950 --> 03:20.010
Ouvrons notre événement de collision.

03:20.930 --> 03:22.190
Nous avons un cube rose.

03:22.990 --> 03:24.010
Dans le cube bleu.

03:24.640 --> 03:26.110
Le cube rose va tomber.

03:26.880 --> 03:27.930
Voyons ce qui se passe.

03:30.760 --> 03:34.000
Il tombe, entre en collision et continue de tomber.

03:35.020 --> 03:40.810
Nous pouvons voir dans la fenêtre de la console que nous avons une entrée, plusieurs séjours et une sortie.

03:42.920 --> 03:48.590
En regardant le code, on voit qu'il est assez simple d'utiliser debug log pour envoyer un texte simple.

03:49.100 --> 03:49.730
C'est tout.

03:50.780 --> 03:52.730
Jetons un coup d'œil aux événements de collision.

03:52.730 --> 03:53.510
Deux ont été vus.

03:55.740 --> 03:57.060
Même scénario.

03:57.180 --> 03:58.530
A ce moment, nous avons un plancher.

03:59.220 --> 03:59.940
Jouons.

04:02.800 --> 04:04.090
Nous voyons la collision.

04:04.090 --> 04:08.140
Et dans chaque ligne de la console, nous voyons également ce avec quoi nous entrons en collision.

04:08.590 --> 04:11.200
Le cube rose entre en collision avec le cube B.

04:11.530 --> 04:13.780
Remarquez qu'il n'entre pas en collision avec le sol.

04:13.810 --> 04:15.040
Voyons comment cela se passe.

04:18.110 --> 04:19.370
À l'intérieur de chaque méthode.

04:19.370 --> 04:24.920
Nous vérifions si nous entrons en collision avec le sol et ensuite nous ne disons pas la déclaration du journal de débogage.

04:25.100 --> 04:26.840
Comment fonctionne le sol ?

04:27.790 --> 04:29.800
Ici, nous vérifions simplement la couche.

04:29.920 --> 04:32.170
Et c'est bien la couche du sol maintenant ?

04:32.170 --> 04:34.780
La constante de la couche plancher est simplement égale au plancher.

04:34.810 --> 04:37.240
C'est une façon simple de stocker cette variable.

04:38.490 --> 04:44.160
Si nous regardons dans unity et que nous attendons le sol, nous voyons que le calque est défini sur le sol.

04:44.310 --> 04:46.290
C'est ainsi que ce code le sait.

04:46.290 --> 04:50.310
Pour ne pas dire le journal de débogage lorsque nous entrons en collision avec le sol.

04:50.340 --> 04:51.090
C'est tout.

04:52.180 --> 04:56.830
Dans la prochaine vidéo, nous examinerons les événements déclencheurs et l'objet collider.

04:56.950 --> 05:01.510
Nous verrons ce que sont les événements déclencheurs et pourquoi ils sont utiles dans nos projets de jeu.

05:01.510 --> 05:04.750
Nous allons même ouvrir unity et jouer avec quelques trigger events.
