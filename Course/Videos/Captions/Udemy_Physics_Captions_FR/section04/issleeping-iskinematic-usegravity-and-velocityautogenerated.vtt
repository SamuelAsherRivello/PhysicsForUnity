WEBVTT

00:00.840 --> 00:04.980
Dort est l'utilisation cinématique, la gravité et la vitesse.

00:05.010 --> 00:09.480
Dans cette vidéo, nous allons aborder ces propriétés physiques très puissantes et utiles.

00:09.480 --> 00:13.380
Nous allons apprendre à activer et désactiver la physique pour chaque objet du jeu.

00:13.470 --> 00:15.720
Nous apprendrons pourquoi nous voulons parfois faire cela.

00:15.720 --> 00:17.490
Ensuite, nous ouvrirons l'éditeur Unity.

00:17.510 --> 00:19.020
Nous allons jouer avec ces propriétés.

00:19.020 --> 00:21.820
Récapitulons certaines des propriétés physiques importantes.

00:21.840 --> 00:25.370
Imaginons que nous ayons une pile de cubes et que l'un de ces cubes soit sélectionné.

00:25.380 --> 00:30.750
Il possède une boîte de collision avec certaines propriétés et un corps rigide qui possède également des propriétés.

00:30.960 --> 00:37.800
Certaines de ces propriétés sont accessibles à partir de l'inspecteur et du code, par exemple la cinématique

00:37.800 --> 00:39.030
et utilise la gravité.

00:39.120 --> 00:45.480
Cependant, certaines propriétés ne sont accessibles qu'à partir du code, par exemple sleeping et velocity.

00:45.930 --> 00:48.510
Jetons un coup d'œil au corps rigide et à la cinématique.

00:48.510 --> 00:53.520
Cela permet de contrôler si la physique du système affecte ou non ce corps rigide.

00:53.640 --> 00:55.860
Par défaut, il est défini sur false.

00:55.860 --> 00:58.800
L'objet du jeu se comportera sous le contrôle de la physique.

00:58.920 --> 01:05.580
Parfois, nous voulons le mettre à true, et alors les forces physiques, les collisions et les articulations seront ignorées.

01:06.060 --> 01:12.660
En lui attribuant la valeur true, nous donnons à notre objet de jeu la possibilité d'être piloté par des scripts au lieu d'être piloté par la physique.

01:12.660 --> 01:13.680
système physique.

01:13.680 --> 01:16.290
Nous pouvons même l'activer dans certains scénarios.

01:16.290 --> 01:20.310
Nous pourrions commencer avec un véritable objet de jeu piloté par un script.

01:20.400 --> 01:26.310
Et lorsque notre personnage est touché, par exemple, nous pourrions rapidement le transformer en poupée de chiffon et il

01:26.310 --> 01:28.260
tomberait de manière crédible sur le sol.

01:28.260 --> 01:32.850
En réglant sa cinématique sur un faux corps rigide, on utilise la gravité.

01:32.850 --> 01:36.690
Ceci contrôle si la gravité affecte ce corps rigide ou non.

01:37.110 --> 01:41.970
Par défaut, cette valeur est fixée à true, ce qui permet à l'objet de tomber sous l'effet de la gravité.

01:42.120 --> 01:44.610
Parfois, nous voulons la mettre à false.

01:44.610 --> 01:50.580
Si nous voulons nous comporter comme si nous étions dans l'espace, où il n'y a pas de gravité, ou si nous voulons plus d'informations sur la gravité.

01:50.580 --> 01:52.530
contrôle manuel des objets.

01:52.530 --> 01:55.440
Le corps rigide du mouvement est endormi.

01:55.740 --> 02:00.570
Bien qu'il ne s'agisse pas d'une propriété, c'est une méthode, comme le montrent les parenthèses.

02:00.570 --> 02:04.020
Après cela, nous pouvons obtenir la valeur comme pour une propriété.

02:04.050 --> 02:06.930
Cela nous permet de savoir si le corps rigide dort ?

02:06.930 --> 02:13.680
Lorsqu'un corps rigide se déplace très lentement, le moteur physique suppose qu'il s'est arrêté et il définit

02:13.680 --> 02:15.290
en mode veille.

02:15.300 --> 02:19.710
Cette optimisation permet d'économiser du temps de processeur dans la plupart des cas.

02:19.710 --> 02:26.130
Le sommeil et le réveil se produisent automatiquement, nous pouvons donc supposer que lorsqu'il est en mouvement, il est en mode sommeil.

02:26.130 --> 02:29.880
faux et que lorsqu'il est au repos, le sommeil est vrai.

02:30.240 --> 02:36.090
Notre objectif, par exemple, est de détecter quand notre personnage s'est arrêté de bouger ou qu'un objet dans le jeu s'est arrêté.

02:36.090 --> 02:37.080
a cessé de bouger.

02:37.290 --> 02:43.230
Par exemple, si mon personnage tire une flèche sur une cible, la flèche vole dans l'air et finit par

02:43.230 --> 02:44.400
s'arrête.

02:44.730 --> 02:48.030
Quand elle s'arrête, c'est dormir qui serait vrai.

02:48.060 --> 02:52.980
Je pourrais vérifier cela et savoir, ok, il est prêt à recevoir une autre flèche.

02:53.400 --> 02:55.110
Vitesse du corps rigide.

02:55.110 --> 03:00.990
Le vecteur vitesse du corps rigide est contenu dans ce vecteur vitesse du corps rigide.

03:00.990 --> 03:03.750
Il s'agit du vecteur vitesse du corps rigide.

03:03.750 --> 03:06.040
C'est la direction et la vitesse du mouvement.

03:06.060 --> 03:12.780
Dans la plupart des cas, vous ne devez pas modifier directement la vitesse, car cela peut entraîner un comportement irréaliste.

03:12.780 --> 03:14.610
Il existe toutefois des exceptions.

03:14.850 --> 03:20.700
Dans un jeu de tir à la première personne, la vitesse peut être modifiée immédiatement.

03:20.700 --> 03:26.460
Lorsque votre personnage saute, vous voulez que la vitesse change rapidement et que vous puissiez la régler directement.

03:26.640 --> 03:33.000
Notre objectif est généralement d'accéder à la valeur sans la définir, afin d'obtenir la vitesse de l'objet.

03:33.000 --> 03:39.810
Par exemple, si nous voulons afficher à l'écran le compteur de vitesse d'une voiture basée sur la physique, nous pourrions obtenir

03:39.810 --> 03:40.710
cette valeur.

03:40.710 --> 03:43.320
Parlons de la désactivation de la physique.

03:43.320 --> 03:47.970
Il arrive que les jeux désactivent la physique pour un objet spécifique pendant le jeu.

03:47.970 --> 03:52.920
Par exemple, nous voulons déplacer les objets à l'aide de la souris au lieu de la physique.

03:52.920 --> 03:59.220
Il y a deux propriétés que nous devons basculer ici si nous voulons activer et désactiver la physique,

03:59.220 --> 04:03.660
nous réglons l'utilisation de la gravité sur false et la cinématique sur true.

04:03.660 --> 04:08.910
Nous pouvons maintenant contrôler le mouvement de ce corps rigide avec du code Lorsque nous sommes prêts à rétablir le mouvement

04:08.910 --> 04:15.000
pour un contrôle basé sur la physique, nous pouvons définir use gravity à true et is kinematic à false.

04:15.000 --> 04:20.570
Il retomberait alors sous l'effet de la gravité et se comporterait avec des articulations et des forces physiques, etc.

04:20.580 --> 04:25.620
Créons une démo qui utilise toutes les propriétés dont nous avons parlé et voyons comment elles peuvent fonctionner ensemble.

04:25.620 --> 04:27.960
J'ai créé une scène appelée Dropper Game.

04:27.960 --> 04:29.160
Jouons la scène.

04:29.160 --> 04:30.930
Il s'agit d'un jeu très simpliste.

04:30.930 --> 04:35.340
Nous allons inspecter le code et regarder comment ces quatre propriétés sont utilisées.

04:35.340 --> 04:37.470
Nous attendons le prochain tour de l'utilisateur.

04:37.470 --> 04:38.880
En utilisant, on dort.

04:38.880 --> 04:47.070
Nous affichons la vitesse sur une interface utilisateur à l'aide de la vélocité et nous utilisons la combinaison du glissement de la souris et de la chute.

04:47.070 --> 04:51.060
En utilisant les deux propriétés cinématiques et en utilisant la gravité.

04:52.110 --> 04:52.410
Très bien.

04:52.410 --> 04:53.760
Nous voici de retour à l'unité.

04:54.240 --> 04:57.120
Jetons un coup d'œil à la scène de jeu proprement dite.

04:58.260 --> 05:02.910
Et nous allons voir comment ces propriétés pour la physique sont utilisées dans le gameplay.

05:03.150 --> 05:04.320
Allons-y et jouons.

05:10.350 --> 05:17.460
Il y a donc quatre propriétés dont nous parlons. La première est la vitesse de chute de la boîte à gouttes.

05:17.460 --> 05:19.800
l'écran utilise la propriété velocity.

05:20.160 --> 05:27.630
Deuxièmement, une fois que la boîte est tombée et a heurté le rail en bas, la boîte suivante devient disponible.

05:27.630 --> 05:28.680
pour que je puisse l'utiliser.

05:28.710 --> 05:33.390
Vous pouvez donc voir qu'il s'écoule quelques secondes et qu'une autre boîte est prête à être utilisée.

05:33.600 --> 05:39.660
La façon dont je gère cela est d'attendre que la condition "is sleeping" soit vraie pour la boîte suivante.

05:39.960 --> 05:42.600
Donc, "sleeping" est faux.

05:42.600 --> 05:47.040
Et puis quand il frappe enfin, son sommeil est vrai, et c'est à nouveau mon tour.

05:47.130 --> 05:48.630
Voilà donc deux des propriétés.

05:49.080 --> 05:52.710
Remarquez également que je peux contrôler la boîte à l'aide de ma souris.

05:52.710 --> 05:58.650
Bien qu'il utilise un corps rigide, j'ai défini des paramètres qui me permettent de le déplacer manuellement.

05:58.830 --> 06:01.980
Je désactive la gravité et j'active la cinématique.

06:01.980 --> 06:09.470
Une fois que j'ai cliqué avec ma souris, je désactive la cinématique et j'active la gravité.

06:09.480 --> 06:11.040
Jetons un coup d'oeil au code pour cela.

06:16.740 --> 06:20.490
Il y a donc quatre endroits où j'accède à l'un d'entre eux.

06:20.490 --> 06:25.020
Chaque fois que j'ajoute un nouveau dropper, vous pouvez voir le commentaire accéder aux propriétés physiques.

06:25.020 --> 06:30.240
Ce que je fais ici, c'est que je règle la gravité sur false kinematic true.

06:30.240 --> 06:31.980
Cela me permet de contrôler la souris.

06:33.720 --> 06:41.400
Ensuite, dans la mise à jour, qui est appelée à chaque image, si je clique sur le bouton de la souris, je fais basculer

06:41.400 --> 06:44.700
la gravité et je mets la cinématique à faux.

06:44.700 --> 06:47.610
Cela lui permet de tomber sous les forces naturelles de la gravité.

06:48.300 --> 06:52.980
De plus, pendant qu'il tombe dans la mise à jour, eye check dort.

06:53.250 --> 06:56.040
S'il dort, c'est qu'il est prêt pour le prochain tour.

06:56.040 --> 06:58.830
Je marque donc des points et je me lance.

06:59.840 --> 07:01.160
Relâcher le dropper suivant.

07:02.570 --> 07:05.330
Et enfin, je.

07:06.660 --> 07:14.190
Capture la vitesse maximale afin de récompenser les points en fonction de la vitesse maximale du bloc.

07:14.400 --> 07:20.910
C'est un mécanisme idiot et une excuse pour utiliser la vélocité, mais il récompense plus de points pour la chute de

07:20.910 --> 07:21.750
d'une hauteur plus élevée.

07:21.750 --> 07:22.650
Et c'est tout.

07:23.520 --> 07:29.010
Dans la prochaine vidéo, nous aborderons la physique, la refonte et la refonte de la commande Schedule batch.

07:29.040 --> 07:33.450
Dans cette vidéo, nous verrons ce que sont les requêtes spatiales dans un système physique.

07:33.450 --> 07:37.110
Comment et pourquoi sont-elles utiles, et qu'en faisons-nous ?
