WEBVTT

00:01.840 --> 00:03.150
Optimisation de la physique.

00:03.160 --> 00:06.810
Dans cette vidéo, nous allons examiner un exemple concret de physique.

00:06.820 --> 00:09.220
Nous allons expérimenter quelques optimisations.

00:09.220 --> 00:12.700
Enfin, nous améliorerons considérablement les performances.

00:13.030 --> 00:14.530
Optimisons donc.

00:14.980 --> 00:19.560
J'ai créé une démo avec plusieurs instances du même objet chaîne.

00:19.570 --> 00:22.810
Vous pouvez voir ici que j'en crée environ 20 000.

00:23.260 --> 00:25.420
Les performances actuelles sont très faibles.

00:25.420 --> 00:28.420
Elle est d'environ trois images par seconde sur mon ordinateur portable.

00:28.420 --> 00:31.900
Les performances peuvent varier, bien sûr, en fonction de la machine sur laquelle vous vous trouvez.

00:31.900 --> 00:36.100
Fixons-nous pour objectif d'obtenir des performances de l'ordre de 60 images par seconde.

00:36.280 --> 00:38.500
Nous allons voir ce que nous pouvons faire pour l'optimiser.

00:40.620 --> 00:41.980
Jetons un coup d'œil à la démo.

00:42.000 --> 00:44.720
Nous allons utiliser la scène de début de physique optimisée.

00:44.730 --> 00:50.430
Nous jouons la scène, puis nous itérons sur les optimisations, nous vérifions continuellement le taux de rafraîchissement.

00:50.430 --> 00:51.480
et nous verrons comment nous nous en sortons.

00:52.110 --> 00:53.790
Très bien, entrons dans le projet.

00:54.300 --> 00:57.150
Nous examinons donc la scène de début optimisée.

00:57.540 --> 01:02.460
Ce que j'ai mis en place ici est une série de liens d'une chaîne.

01:02.640 --> 01:04.170
Ce n'est pas une chaîne avec des articulations.

01:04.170 --> 01:06.000
Je n'utilise que ces morceaux.

01:06.000 --> 01:11.460
Et si j'ouvre un peu plus cette fenêtre, Unity affiche quelques statistiques.

01:12.420 --> 01:18.300
Avec les statistiques, nous pouvons voir qu'au fur et à mesure que ces pièces tombent et interagissent avec le défaut de chacune d'entre elles, elles s'effondrent.

01:18.300 --> 01:18.840
l'autre.

01:18.840 --> 01:25.200
Nous obtenons une fréquence d'images d'environ 2,8 à 3 images par seconde, ce qui est très faible.

01:25.860 --> 01:28.840
Visons un objectif d'environ 60 images par seconde.

01:28.890 --> 01:30.720
Voyons quels types de changements nous pouvons apporter.

01:32.070 --> 01:33.990
La configuration de la scène est donc assez simple.

01:33.990 --> 01:35.040
Il y a un sol.

01:35.070 --> 01:40.680
J'ai ensuite un in ici, que j'utilise pour créer environ 20 000 objets, ce qui est beaucoup.

01:41.010 --> 01:42.420
J'ai ensuite une scène.

01:43.350 --> 01:46.630
Configuration de l'objet de jeu appelé Optimized Physics setup (configuration de la physique optimisée).

01:46.650 --> 01:50.200
C'est un tas de choses qui sont des commentaires ou du code qui est commenté.

01:50.220 --> 01:51.690
Passons en revue chacun d'entre eux.

01:51.780 --> 01:56.850
Tout d'abord, en tant que conseil de test, cela ne rend pas vraiment le projet plus efficace, mais cela donne

01:56.850 --> 02:00.270
une meilleure lecture de la fréquence d'images dans l'interface utilisateur de l'écran.

02:00.390 --> 02:02.550
Nous venons de mettre le compte V Sync à zéro.

02:02.550 --> 02:09.660
Pour ce qui est de l'optimisation proprement dite, la première étape consiste toujours à mettre à jour unity vers la dernière version publique.

02:09.660 --> 02:14.670
Si vous le pouvez, vous obtiendrez de meilleures performances car unity met constamment à jour l'ensemble de son système.

02:14.670 --> 02:18.510
de rendu et de physique, etc. afin d'obtenir de très bons résultats.

02:18.600 --> 02:24.300
Deuxièmement, pendant que vous testez, si la fréquence d'images est très importante pour vous, envisagez de passer à

02:24.300 --> 02:29.550
votre appareil final, qu'il s'agisse d'une version Windows ou d'une version iOS ou Android, et testez-la de plus près.

02:29.550 --> 02:37.080
de l'expérience de l'utilisateur final, vous obtiendrez des performances meilleures ou plus proches de celles de l'utilisateur final.

02:37.080 --> 02:39.510
l'utilisateur, ce qui est bien sûr un point de référence important.

02:40.660 --> 02:43.390
Commençons par les choses que nous pouvons faire dans le cadre du projet.

02:43.720 --> 02:48.190
Troisièmement, nous pouvons aller de l'avant et désactiver les ombres dans la scène.

02:48.220 --> 02:52.450
Nous pouvons également rendre le sol de la scène statique, ce qui est une modification de la physique.

02:52.810 --> 03:00.100
Nous pouvons aller dans le préfabriqué de la chose et désactiver son collider mesh pour utiliser une primitive comme un collider box.

03:00.100 --> 03:00.700
à la place.

03:00.730 --> 03:03.940
Faisons ces trois étapes et voyons quels types de changements nous obtenons.

03:04.450 --> 03:06.070
Commençons par l'éclairage.

03:07.270 --> 03:10.660
Nous avons des ombres dures qui sont.

03:11.440 --> 03:13.630
Plus efficaces que les ombres douces.

03:13.630 --> 03:15.370
Mais essayons sans ombres.

03:15.370 --> 03:16.930
Voyons si nous obtenons un effet quelconque.

03:16.930 --> 03:20.620
Nous allons donc passer en revue certaines de ces choses qui pourraient faire une bonne différence, et d'autres qui pourraient être utiles pour la mise en place d'un système de gestion des ombres.

03:20.620 --> 03:21.490
d'entre elles pourraient ne pas l'être.

03:21.880 --> 03:27.970
Nous cliquons donc ici sur la souris pour lancer le spinner et...

03:28.780 --> 03:30.190
Au moins au début.

03:30.190 --> 03:34.330
Je veux dire qu'avec le temps, ça va ralentir parce qu'il y a de plus en plus de calculs.

03:34.330 --> 03:36.490
Mais je pense que c'est un peu mieux.

03:36.490 --> 03:41.170
Nous sommes plus proches de trois qu'auparavant, alors considérez cela comme une option.

03:42.180 --> 03:44.230
Votre jeu, bien sûr, peut nécessiter des ombres.

03:44.290 --> 03:45.150
Vous ne pouvez peut-être pas le faire.

03:45.150 --> 03:49.050
Mais je tiens à souligner qu'il existe une solution non physique.

03:49.200 --> 03:54.120
La prochaine chose que nous allons examiner est le réglage du plancher simple, qui se trouve en dessous de tout, en réglant

03:54.120 --> 03:55.020
à statique.

03:55.820 --> 04:00.980
En faisant cela, on peut optimiser le corps rigide et travailler plus efficacement.

04:00.980 --> 04:02.030
Jetons un coup d'œil.

04:02.650 --> 04:05.660
Souvenez-vous, nous avions environ trois dans le meilleur des cas.

04:06.580 --> 04:07.780
Ici.

04:10.280 --> 04:11.780
C'est plus ou moins la même chose.

04:11.780 --> 04:16.010
Il est possible qu'il y ait de petits changements, mais c'est à vérifier.

04:16.640 --> 04:19.820
Si vous aviez plus d'objets, il serait bon d'en rendre un plus grand nombre statiques.

04:19.850 --> 04:21.960
Regardons ensuite le préfabriqué thing.

04:21.980 --> 04:25.190
Prenons-le et amenons-le dans le monde en zoomant.

04:25.190 --> 04:28.430
Nous pouvons voir ici que nous avons un collisionneur de maillage.

04:28.430 --> 04:35.540
Si nous désactivons le collider de maillage et que nous ajoutons à la place un collider de boîte, nous pouvons voir que le collider de boîte

04:35.540 --> 04:38.600
fait de toute façon un très bon travail d'estimation de sa forme.

04:38.600 --> 04:43.910
Bien sûr, les coins ne sont plus ronds et, en fonction de notre projet de jeu, cela pourrait en fait

04:43.910 --> 04:47.000
Cela peut avoir de l'importance et nous donner un résultat physique assez différent.

04:47.300 --> 04:52.910
Maintenant que j'ai effectué ce changement et que je l'ai enregistré dans le préfabriqué, voyons comment cela fonctionne.

04:55.830 --> 04:58.020
Je clique donc sur ma souris pour démarrer.

05:03.740 --> 05:05.350
Il oscille autour de trois.

05:06.850 --> 05:09.670
Il se peut donc que cela n'ait pas fait une grande différence ici.

05:10.720 --> 05:16.360
Je vais donc vérifier une nouvelle fois qu'il s'agit bien d'un changement.

05:16.660 --> 05:17.880
J'ai un box collider.

05:17.890 --> 05:19.570
Le collider mesh est désactivé.

05:19.780 --> 05:21.550
Je vais supprimer le collider mesh.

05:21.850 --> 05:23.800
Je ne sais pas si cela fait une différence, mais...

05:24.800 --> 05:29.150
Même s'il a été désactivé, parce que je suis surpris que nous n'ayons pas un petit saut d'image.

05:29.150 --> 05:31.730
ici, un peu d'amélioration.

05:35.810 --> 05:37.640
Et il ne semble pas que cela ait fait une grande différence.

05:37.640 --> 05:39.440
Mais peut-être que dans votre projet, ce serait le cas.

05:40.350 --> 05:41.490
Passons aux étapes suivantes.

05:42.850 --> 05:43.390
Ici.

05:43.390 --> 05:47.200
Il y a plusieurs valeurs de temps différentes que nous allons pouvoir régler.

05:47.410 --> 05:55.990
Pour chacune de ces valeurs, vous allez chercher un compromis entre une physique précise et une physique efficace.

05:55.990 --> 05:56.740
taux de rafraîchissement.

05:56.980 --> 06:01.930
Nous sommes donc en mesure d'ajuster ces éléments et ils continueront à effectuer des calculs, mais peut-être moins souvent.

06:01.930 --> 06:03.360
ou plus souvent qu'avant.

06:03.370 --> 06:08.110
Voici donc quelques valeurs avec lesquelles j'ai joué à l'avance et que j'ai obtenues avec ces ajustements

06:08.110 --> 06:08.890
de bons résultats.

06:08.890 --> 06:09.760
Jetons donc un coup d'œil.

06:10.800 --> 06:11.880
Je vais courir ici.

06:15.850 --> 06:16.810
Et faire un essai.

06:18.030 --> 06:21.570
Cela fait une énorme différence.

06:21.570 --> 06:24.330
Je pense que dans ce cas, c'est vraiment la clé.

06:25.080 --> 06:28.830
Nous pourrions probablement ne faire que ce changement et annuler les autres.

06:28.830 --> 06:31.740
Auparavant, nous sommes passés à 80, 80 images par seconde.

06:31.740 --> 06:35.100
Nous avons donc atteint notre objectif de 60, ce qui est fantastique.

06:35.220 --> 06:39.450
Encore une fois, si vous regardez la documentation pour ces deux propriétés, vous pouvez en apprendre un peu plus

06:39.450 --> 06:41.700
sur ce qu'elles font et pourquoi vous pouvez les modifier.

06:41.700 --> 06:46.800
Et en fonction de votre projet, vous ne pourrez peut-être pas les modifier autant que je l'ai fait.

06:46.800 --> 06:49.920
Vous pourriez avoir besoin d'une certaine précision.

06:50.490 --> 06:53.790
Ensuite, j'ai essayé d'autres choses qui ne m'ont pas vraiment aidé.

06:54.330 --> 07:01.530
Il y a quelques paramètres de physique que vous pouvez régler ici et en les réglant, et peut-être les valeurs que j'ai choisies

07:01.530 --> 07:04.020
ne m'ont pas permis d'obtenir une bonne différence.

07:04.020 --> 07:09.060
Je ne vais donc pas en parler dans le cadre de cette conversation, mais sachez qu'il y en a quelques-unes.

07:09.060 --> 07:10.050
d'autres valeurs.

07:10.050 --> 07:13.320
Enfin, il y a quelque chose dans les paramètres qui s'appelle Adaptive Force (force adaptative).

07:13.320 --> 07:14.550
Je vais essayer.

07:15.300 --> 07:22.680
Dans les paramètres de Physics Project, Physics active la force adaptative.

07:22.680 --> 07:25.110
Oh, c'est déjà activé dans notre démo.

07:25.110 --> 07:30.780
Il s'agit donc d'activer la force qui améliore la stabilité des grandes piles.

07:30.780 --> 07:37.800
La stabilité semble donc être un meilleur résultat mais plus lent car j'imagine qu'il y a un calcul...

07:37.800 --> 07:38.160
il y a un calcul.

07:38.160 --> 07:42.600
Désactivons-le et voyons si nous obtenons de moins bonnes performances.

07:42.600 --> 07:44.250
Nous sommes plus performants.

07:46.400 --> 07:47.630
Ou peut-être que ce sera la même chose.

07:48.320 --> 07:50.840
Nous avons donc l'air en forme.

07:52.970 --> 07:54.710
Avant.

07:57.000 --> 07:59.230
Oui, je dirais que c'est mieux maintenant.

07:59.250 --> 08:03.840
Il est donc préférable de ne pas activer la fonction d'adaptation.

08:04.380 --> 08:08.490
C'est difficile à dire parce qu'au fur et à mesure que nous laissons jouer, la scène devient plus complexe.

08:08.490 --> 08:14.250
Il ne s'agit donc pas d'une approche scientifique, puisque nous nous contentons de regarder la fréquence d'images et de faire une évaluation visuelle.

08:14.250 --> 08:19.830
Mais dans l'ensemble, nous constatons que les performances sont bien meilleures qu'auparavant.

08:20.620 --> 08:20.890
Maintenant.

08:20.890 --> 08:23.320
Et bien sûr, nous sommes avec 20 000 objets.

08:23.320 --> 08:29.950
C'est donc une bonne chose pour votre jeu, si vous rencontrez des problèmes de fréquence d'images, et si vous compliquez les choses.

08:29.950 --> 08:35.680
le problème avec plus d'obstacles, plus de niveaux dans votre conception de niveau.

08:36.160 --> 08:41.980
Voyez si vous pouvez le rendre plus lent, puis chacun de ces petits changements rendra le cadre plus dramatique.

08:41.980 --> 08:44.470
et vous comprendrez.

08:44.470 --> 08:45.790
D'accord, cette fonction est utile.

08:45.790 --> 08:46.830
Cette fonction n'aide pas.

08:46.840 --> 08:51.880
Ensuite, lorsque vous supprimez la complexité, vous revenez à une fréquence d'images plus stable.

08:51.880 --> 08:53.950
représente le jeu que vous voulez.

08:53.950 --> 08:55.090
C'est tout.

08:55.390 --> 09:00.520
Vous pouvez également jeter un coup d'oeil à la scène physique optimisée complète pour voir exactement le même résultat final.

09:00.520 --> 09:04.600
Mais comme vous êtes en train d'expérimenter, si vous voulez vous lancer, jouez un peu et comparez ensuite,

09:04.600 --> 09:05.400
vous pouvez le faire.

09:05.410 --> 09:06.140
Voilà, c'est tout.

09:06.160 --> 09:07.030
Merci beaucoup.

09:09.720 --> 09:14.010
Dans la prochaine vidéo, nous nous intéresserons à la prédiction de la trajectoire de la physique.
