WEBVTT

00:01.860 --> 00:03.870
Ajout des conditions de victoire et de perte.

00:03.900 --> 00:07.950
Dans cette vidéo, nous aborderons la création des règles de haut niveau du jeu.

00:08.190 --> 00:14.940
Nous déterminerons comment l'utilisateur gagne et comment il perd, et nous ajouterons l'interface utilisateur et les règles pour soutenir le jeu.

00:14.940 --> 00:15.390
cela.

00:16.130 --> 00:23.270
La tâche consiste à ajouter le préfabriqué d'interface utilisateur des canards contrariés et le script C-sharp qui nous permettront d'obtenir ce résultat.

00:23.270 --> 00:25.160
que nous voyons dans la capture d'écran ici.

00:25.490 --> 00:32.630
Ensuite, avec la classe de jeu et la classe d'interface utilisateur, nous allons créer les conditions de victoire et de défaite de manière à ce que

00:32.630 --> 00:38.450
nous sachions quand l'utilisateur gagne et quand il a terminé parce qu'il a perdu le jeu.

00:39.340 --> 00:43.410
Nous ouvrirons le projet dans la section 5 Video for Upset.

00:43.420 --> 00:44.290
Ducks quatre.

00:44.680 --> 00:44.890
Très bien.

00:44.890 --> 00:46.330
Sautons dans Unity ici.

00:46.480 --> 00:50.590
Nous allons examiner les canards de contrariété pour.

00:51.630 --> 00:52.470
Allez-y et exécutez-la.

00:53.070 --> 00:54.750
Vous pouvez voir que nous avons maintenant l'interface utilisateur à l'écran.

00:54.750 --> 00:59.310
Nous avons un texte qui indique que nous avons trois astéroïdes à chaque fois que nous tirons sur un astéroïde.

00:59.760 --> 01:03.960
Une fois l'effet produit, l'astéroïde passe de 3 à 2.

01:04.080 --> 01:05.790
Le score augmente également.

01:05.790 --> 01:09.510
Cela nous indique le nombre de canards que nous avons réussi à atteindre.

01:09.510 --> 01:11.880
Nous voyons donc que nous avons obtenu le score deux sur trois.

01:12.940 --> 01:14.770
Et voyons ce qu'il en est.

01:14.770 --> 01:16.330
J'ai encore un coup à jouer.

01:22.840 --> 01:23.620
Je ne l'ai pas eu.

01:25.970 --> 01:27.350
Puis le résultat s'affiche.

01:27.470 --> 01:33.710
Donc tout ça, les astéroïdes, le score et le texte des résultats perdus, c'est ce qu'on va travailler

01:33.710 --> 01:34.310
maintenant.

01:34.640 --> 01:39.410
Nous allons donc créer une nouvelle interface utilisateur de type upset duck à partir de zéro.

01:41.050 --> 01:42.070
Commençons.

01:42.400 --> 01:44.710
Nous allons créer un objet de jeu vide.

01:51.580 --> 01:53.650
Vérifions que nous sommes bien à zéro.

01:55.460 --> 02:00.200
Et pour commencer à ajouter l'interface utilisateur, nous allons simplement faire un clic droit sur cet objet et nous allons ajouter l'interface utilisateur.

02:00.230 --> 02:01.820
Nous disposons d'un grand nombre d'options différentes.

02:01.820 --> 02:08.600
Je vais simplement utiliser le texte ici et vous pouvez voir que nous obtenons un texte d'une certaine taille.

02:08.720 --> 02:17.840
Je vais augmenter la taille à 30 et modifier la largeur et la hauteur.

02:20.090 --> 02:21.800
Et le positionnement.

02:25.530 --> 02:26.460
C'est parti.

02:26.820 --> 02:29.280
Pour donner de l'effet, vous pouvez également ajouter un contour.

02:31.070 --> 02:32.840
Et lui donner également une couleur.

02:34.280 --> 02:38.480
Et faire en sorte qu'il soit noir sur texte blanc ou blanc sur texte noir, comme bon nous semble.

02:39.240 --> 02:43.230
Ensuite, nous lui donnerons un nom et nous aurons le score.

02:46.230 --> 02:51.060
Nous allons ensuite dupliquer cela pour le texte des astéroïdes.

02:55.050 --> 02:57.540
Et nous déplaçons le score sur le côté.

03:04.400 --> 03:06.770
Nous en ajouterons un autre pour le texte des résultats.

03:20.140 --> 03:22.090
Nous aimerions peut-être que ce texte soit un peu plus grand.

03:32.410 --> 03:32.830
Nous sommes d'accord.

03:32.830 --> 03:35.890
Maintenant, nous allons ajouter notre script d'interface utilisateur existant.

03:36.610 --> 03:40.440
Je vais le faire glisser d'ici pour être sûr de prendre le bon.

03:40.450 --> 03:41.890
L'interface utilisateur du canard contrarié.

03:42.160 --> 03:44.830
Je renseigne ensuite ces références.

03:48.950 --> 03:52.720
Oups, les astéroïdes sont entrés en premier, ce qui fait qu'ils sont les derniers.

03:53.600 --> 03:55.610
Ensuite, je joue la scène.

04:00.210 --> 04:04.410
Je vois que le script de résultats doit commencer sans texte à l'intérieur.

04:07.450 --> 04:07.870
C'est bon.

04:07.870 --> 04:10.750
Nous pouvons donc voir que les valeurs sont renseignées ici.

04:11.020 --> 04:12.740
Voyons comment cela se passe.

04:12.760 --> 04:16.840
Jetons donc un coup d'œil au script de l'interface utilisateur de upset Docs, tout d'abord.

04:17.440 --> 04:23.770
Ce que je veux montrer ici, c'est que j'ai une méthode publique pour remplir chacun de ces champs

04:23.770 --> 04:26.590
les astéroïdes, le score et le résultat.

04:29.100 --> 04:32.970
Dans le script du jeu, c'est donc là que nous avons établi les règles.

04:32.970 --> 04:35.100
Passons en revue quatre domaines clés.

04:36.700 --> 04:42.700
Tout d'abord, à l'intérieur du démarrage, ce que je fais, c'est que je boucle la liste de tous les éléments du monde dans la section

04:42.700 --> 04:43.240
scène.

04:43.570 --> 04:45.970
Je fais cela pour compter le nombre de canards que nous avons.

04:45.970 --> 04:49.340
De cette façon, je sais quel est le score total que nous voulons atteindre.

04:49.360 --> 04:50.980
Il y a d'autres façons de procéder.

04:50.980 --> 04:55.600
Je pourrais aussi coder en dur la valeur de trois dans ce cas, mais cette méthode est un peu plus souple.

04:55.600 --> 04:58.270
Les concepteurs de niveaux peuvent donc ajouter autant de canards qu'ils le souhaitent.

04:59.080 --> 05:01.970
Deuxièmement, je donne nos valeurs de gameplay de départ.

05:01.990 --> 05:08.410
Je mets le score à zéro et je mets les astéroïdes à une valeur de concert, c'est-à-dire dans notre cas, set

05:08.410 --> 05:09.400
à trois.

05:09.550 --> 05:11.770
Ces valeurs sont faciles à modifier.

05:12.800 --> 05:17.540
Je sais maintenant que j'ai un score de zéro et qu'il m'en faut deux pour atteindre trois des canards.

05:18.900 --> 05:20.370
Avec trois des astéroïdes.

05:20.490 --> 05:25.020
Ensuite, ici, à chaque mise à jour, je vérifierai s'il y a des canards morts.

05:25.020 --> 05:26.280
C'est ce que je fais ici.

05:26.280 --> 05:28.040
Je passe en revue tous les éléments du monde.

05:28.050 --> 05:33.630
S'il s'agit d'un canard, je vérifie s'il est en vie, mais sa santé est nulle.

05:33.630 --> 05:36.270
Dans ce cas, il doit être marqué comme n'étant plus en vie.

05:36.270 --> 05:37.920
Et j'incrémente quelques points.

05:37.920 --> 05:39.990
Dans ce cas, je donne un point par canard.

05:40.590 --> 05:43.590
Enfin, j'ai vérifié si le jeu était terminé.

05:43.590 --> 05:49.110
Si le score que nous avons est supérieur ou égal au nombre de canards que nous essayons d'obtenir, c'est-à-dire

05:49.110 --> 05:55.830
trois, alors j'affiche le résultat de true et ce résultat montrera que vous avez gagné.

05:55.830 --> 05:58.920
Ou si dans le cas d'une perte que vous perdez.

05:58.920 --> 05:59.940
Voilà, c'est tout.

06:00.360 --> 06:05.600
Dans ce cas, nous avons couvert la façon dont l'interface utilisateur et les règles du jeu ont été ajoutées à notre projet.

06:05.610 --> 06:06.750
Merci beaucoup.

06:07.940 --> 06:11.030
Dans la prochaine vidéo, nous aborderons l'ajout d'une finition supplémentaire.
