WEBVTT

00:01.610 --> 00:04.110
Yedinci Bölüm İleri Konular.

00:04.130 --> 00:10.400
Bu bölümde, fizikle ilgili en iyi uygulamaları, fiziği optimize etmeyi, fiziği tahmin etmeyi ele alacağız

00:10.400 --> 00:13.550
yörüngenin yanı sıra veri odaklı teknoloji.

00:13.550 --> 00:16.400
Birlik fiziği için kelime noktaları yığını.

00:17.460 --> 00:19.350
Fizik ile ilgili en iyi uygulamalar.

00:19.590 --> 00:23.800
Bu videoda, yapmanız gereken en iyi uygulamaları ele alacağız.

00:23.820 --> 00:30.750
Kaçınılması gereken verimsiz adımları göreceğiz ve en iyi performans için en iyi proje kurulumuna bakacağız.

00:31.380 --> 00:33.780
Dikkat edilmesi gerekenler, yapılması ve yapılmaması gerekenler.

00:33.810 --> 00:38.010
Gotchas, geliştirilirken her zaman açık olmayan yardımcı ipuçlarıdır.

00:38.010 --> 00:43.800
DOS, bize sorunsuz sonuçlar veren en iyi uygulamalardır ve yapılmaması gerekenler listesi kaçınılması gereken şeyler olacaktır

00:43.800 --> 00:47.400
çünkü darboğazlar ya da başka türlü kötü performans yaratırlar.

00:47.400 --> 00:48.900
Bazı genel hatalar.

00:48.900 --> 00:52.800
Her şeyden önce, projenizi kurarken dünya ölçeğini taklit edin.

00:52.800 --> 00:57.330
Katı cisimlerle çalışmaya başladığınızda karşılaşılan yaygın bir sorun, cisimlerin ağır çekimdeymiş gibi görünmesidir.

00:57.330 --> 01:01.080
Bu aslında sadece varsayılan yerçekimi ayarlarının ölçeklendirilmesinden kaynaklanmaktadır.

01:01.080 --> 01:08.430
Bir insan için iki birim yüksekliğe veya bir araba için dört birim uzunluğa karşılık gelen birimleriniz olduğunu varsayın.

01:08.430 --> 01:11.610
Bu yüzden bu ölçekleri ona oldukça yakın kullanmaya çalışın.

01:11.610 --> 01:12.630
Determinizm.

01:12.630 --> 01:16.710
Genel olarak konuşmak gerekirse, günümüzün birlik fiziği deterministik değildir.

01:16.710 --> 01:23.190
Bu, her makinede her seferinde aynı sonucu tekrarlamayacağı anlamına gelir.

01:23.190 --> 01:27.560
Bunun nedeni, farklı derleyicilerin ve işlemcilerin matematiklerini uygulama şekilleridir.

01:27.570 --> 01:31.950
Ancak gelecekte, Unity dots fiziği determinizm vaat ediyor.

01:32.190 --> 01:35.940
Bazı genel dozlar DD'ye karşı üç d'yi akıllıca seçer.

01:35.940 --> 01:40.410
Eğer 2D bir proje yapıyorsanız, üç boyutlu fizik bileşenlerini kullanmayın.

01:40.410 --> 01:46.590
Her oyun nesnesi için statik olarak aşırıya kaçar veya bir projeye gider.

01:46.590 --> 01:47.940
Onları statik olarak ayarlayın.

01:47.940 --> 01:49.530
Fark ettiyseniz hareket etmiyorlar.

01:49.530 --> 01:52.410
Bu zemin arka plan platform elemanlarıdır.

01:52.410 --> 01:54.030
Bu harika bir optimizasyon.

01:54.030 --> 02:00.360
Ardından, ölçeğinizi tek bir ölçekte tutun Nesnelerinizin ölçeklerini en üst düzeye çıkaracak bir ölçekte tutmaya çalışabilirseniz

02:00.360 --> 02:06.510
rijit gövde ve eklem hareketleri için performans Bunun yerine rijit gövde hareket pozisyonu ve hareket rotasyonu kullanın

02:06.510 --> 02:09.330
doğrudan dönüşüm erişimi veya kullanımı.

02:09.330 --> 02:10.800
Kuvvet ekleyin ve tork ekleyin.

02:10.800 --> 02:17.790
Daha önce de bahsettiğimiz gibi, eklemler kitlelerde on kattan daha az küçük farklılıklar kullanır

02:17.790 --> 02:23.640
rijit gövde bileşenleri arasında size daha düzgün sonuçlar verecek, genel olarak yapmamanız gereken şeyler

02:23.640 --> 02:24.240
Mantıklı.

02:24.270 --> 02:30.240
Döndürme veya ölçek değişiklikleri yapmaktan kaçının çünkü bu çarpıştırıcıları yeniden oluşturur ve bunu yapmak pahalıdır.

02:30.270 --> 02:37.860
Yapabiliyorsanız ağ çarpıştırıcıları kullanmayın, bu daha basit ilkel çarpıştırıcıları kutu küre kullanın,

02:37.860 --> 02:43.800
vb. Hatta birden fazla ekleyebilirsiniz çünkü örgü çarpıştırıcıların kullanımı çok pahalıdır ve

02:43.800 --> 02:46.350
tekerlek çarpıştırıcıları da çok pahalıdır.

02:46.620 --> 02:51.990
İşi bitirmek için en az miktarda zam kullanarak yapılması gereken bazı yeniden döküm ipuçları.

02:51.990 --> 02:56.820
Işın dökümlerinizde katman maskeleri kullanarak yapılmaması gereken şeyleri belirtmeye çalışın.

02:56.850 --> 02:59.670
Işınların boyunu gerekenden fazla uzatmayın.

02:59.790 --> 03:05.670
Seviyenizin 100 birim olduğunu aşağı yukarı biliyorsanız, bunu maksimum olarak ayarlamaya çalışın, böylece tarama yapmazsınız

03:05.670 --> 03:07.920
sonsuza kadar uzanır ki bu da pahalıdır.

03:07.920 --> 03:10.890
Ve Mesh Collider'a karşı Ray cast kullanmayın.

03:10.890 --> 03:12.330
Gerçekten pahalı.

03:13.780 --> 03:16.360
Unity Projesi kurulumu için bazı iyi ipuçları.

03:16.360 --> 03:18.720
Katman çarpışma matrisini optimize edin.

03:18.730 --> 03:20.620
Ekran görüntüsünün alt kısmında görebilirsiniz.

03:20.620 --> 03:23.200
Varsayılan olarak, her şey bildiğiniz her şeyle çarpışır.

03:23.200 --> 03:27.400
Projenizi kurduktan sonra, devam edin ve gerekli olmayan kutuların işaretini kaldırın.

03:27.400 --> 03:32.980
Ragdoll kullanımı için daha iyi sonuçlara yol açacak, tüm katı cisimler için eşit kütle.

03:32.980 --> 03:37.480
Beş, 15 veya daha fazla gibi küçük limit aralıkları kullanmaktan kaçının.

03:37.480 --> 03:39.540
Titreşimliyse bu daha iyi.

03:39.550 --> 03:43.690
Varsayılan çözücü yinelemelerini 20 veya daha fazla olacak şekilde güncelleyin.

03:44.600 --> 03:50.690
Zaman alanındaki bazı proje ayarları, iyi bir uzlaşmaya varmak için sabit zaman adımını değiştirir

03:50.690 --> 03:56.540
Yüksek bir değer olan doğruluk ile düşük bir değer olan fizik için harcanan CPU arasında.

03:56.570 --> 04:02.120
Burada 0.1 gibi bir değere ayarlarsak, hala on fizik güncellemesi alacağımız anlamına geldiğini görebilirsiniz

04:02.120 --> 04:03.810
Saniyede ve bu oldukça iyi.

04:03.830 --> 04:10.190
İzin verilen maksimum zaman damgasını da ayarlayın, en kötü durumunuzda fizik için harcanan süreyi sınırlamak için 8 ila 10 kullanın

04:10.190 --> 04:11.210
durum senaryosu.

04:11.920 --> 04:18.160
Erken geliştirme sırasında bile unity profilleyiciyi periyodik olarak kullanın, açın ve araştırın

04:18.160 --> 04:20.150
performansta ne kadar büyük artışlar var.

04:20.170 --> 04:24.250
Uyarıları da arayın, orada bir uyarı gösterecektir.

04:24.250 --> 04:29.710
Örneğin, sabit olarak işaretlenmiş bir şeyi yanlışlıkla hareket ettirirseniz, bu oyun sırasında mümkündür, ancak

04:29.710 --> 04:30.910
gerçekten pahalı.

04:32.500 --> 04:36.160
Bir sonraki videoda fizik optimizasyonu hakkında konuşacağız.
