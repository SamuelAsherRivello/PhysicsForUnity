WEBVTT

00:00.840 --> 00:04.980
Uyumak kinematik kullanımdır, yerçekimi ve hız.

00:05.010 --> 00:09.480
Bu videoda, bu çok güçlü ve kullanışlı fizik özelliklerini ele alacağız.

00:09.480 --> 00:13.380
Her bir oyun nesnesi için fiziği açıp kapatmayı öğreneceğiz.

00:13.470 --> 00:15.720
Bunu bazen neden yapmak istediğimizi öğreneceğiz.

00:15.720 --> 00:17.490
Sonra Unity editörünü açacağız.

00:17.510 --> 00:19.020
Bu özelliklerle oynayacağız.

00:19.020 --> 00:21.820
Önemli fizik özelliklerinden bazılarını özetleyelim.

00:21.840 --> 00:25.370
Bir yığın küpümüz olduğunu ve bu küplerden birinin seçildiğini düşünün.

00:25.380 --> 00:30.750
Bazı özellikleri olan bir kutu çarpıştırıcısı ve yine özellikleri olan bir katı cismi var.

00:30.960 --> 00:37.800
Bu özelliklerden bazılarına denetçiden ve ayrıca koddan erişilebilir, örneğin kinematik

00:37.800 --> 00:39.030
ve yerçekimini kullan.

00:39.120 --> 00:45.480
Bununla birlikte, bazı özelliklere yalnızca koddan erişilebilir, örneğin uyku ve hız.

00:45.930 --> 00:48.510
Şimdi katı cisim kinematiğine bir göz atalım.

00:48.510 --> 00:53.520
Bu, sistemdeki fiziğin bu katı gövdeyi etkileyip etkilemediğini kontrol eder.

00:53.640 --> 00:55.860
Varsayılan olarak yanlış olarak ayarlanmıştır.

00:55.860 --> 00:58.800
Oyun nesnesi fizik kontrolü altında davranacaktır.

00:58.920 --> 01:05.580
Bazen bunu true olarak ayarlamak isteriz ve bu durumda fizik güçleri çarpışmaları ve eklemleri göz ardı eder.

01:06.060 --> 01:12.660
Bunu true olarak ayarlamak, oyun nesnemize aşağıdaki komut dosyası yerine komut dosyası tarafından yönlendirilme fırsatı verecektir

01:12.660 --> 01:13.680
fizik sistemi.

01:13.680 --> 01:16.290
Hatta belirli senaryolarda bunu değiştirebiliriz.

01:16.290 --> 01:20.310
Komut dosyası tarafından yönlendirilen bir oyun nesnesi ile doğru şekilde başlayabiliriz.

01:20.400 --> 01:26.310
Ve sonra karakterimiz vurulduğunda, örneğin, onu hızlı bir şekilde bir ragdoll'a dönüştürebiliriz ve

01:26.310 --> 01:28.260
inandırıcı bir şekilde yere düşerdi.

01:28.260 --> 01:32.850
Kinematiği yanlış katı cisim olarak ayarlayarak yerçekimini kullanın.

01:32.850 --> 01:36.690
Bu, yerçekiminin bu katı gövdeyi etkileyip etkilemediğini kontrol eder.

01:37.110 --> 01:41.970
Varsayılan olarak true olarak ayarlanmıştır ve bu, nesnenin yerçekimi kuvvetleri altında düşmesine izin verir.

01:42.120 --> 01:44.610
Bazen bunu yanlış olarak ayarlamak isteriz.

01:44.610 --> 01:50.580
Eğer yerçekiminden etkilenmeyen uzay boşluğundaymışız gibi davranmak istiyorsak ya da daha fazlasını istiyorsak

01:50.580 --> 01:52.530
nesneler üzerinde manuel kontrol.

01:52.530 --> 01:55.440
Hareket eden katı cisim uyuyor.

01:55.740 --> 02:00.570
Bu aslında bir özellik olmasa da, parantezlerden görüldüğü gibi bir yöntemdir.

02:00.570 --> 02:04.020
Bundan sonra değeri tıpkı bir özellik gibi alabiliriz.

02:04.050 --> 02:06.930
Bu bize katı cismin uyuduğunu mu gösterir?

02:06.930 --> 02:13.680
Rijit bir cisim çok yavaş hareket ettiğinde, fizik motoru onun durduğunu varsayar ve

02:13.680 --> 02:15.290
uyku moduna geçer.

02:15.300 --> 02:19.710
Bu optimizasyon çoğu amaç için işlemci zamanından tasarruf sağlar.

02:19.710 --> 02:26.130
Uyuma ve uyanma otomatik olarak gerçekleşir, bu nedenle hareket halindeyken uyuduğunu varsayabiliriz.

02:26.130 --> 02:29.880
yanlış ve nihayet dinlendiğinde uyku doğrudur.

02:30.240 --> 02:36.090
Örneğin, odak noktamız karakterimizin hareket etmeyi bıraktığını veya oyundaki bir öğeyi tespit etmektir

02:36.090 --> 02:37.080
hareket etmeyi bıraktı.

02:37.290 --> 02:43.230
Örneğin, karakterim bir hedefe ok atarsa, ok havada uçar ve sonunda

02:43.230 --> 02:44.400
durur.

02:44.730 --> 02:48.030
Bir durak söz konusu olduğunda uyumak doğru olacaktır.

02:48.060 --> 02:52.980
Bunu kontrol edebilir ve tamam, başka bir okun atılması için hazır olduğunu anlayabilirim.

02:53.400 --> 02:55.110
Sert cisim hızı.

02:55.110 --> 03:00.990
Rijit gövdenin hız vektörü bu rijit gövde hızı vektöründe tutulur.

03:00.990 --> 03:03.750
Bu, katı cismin hız vektörüdür.

03:03.750 --> 03:06.040
Bu hareketin yönü ve hızıdır.

03:06.060 --> 03:12.780
Çoğu durumda, gerçekçi olmayan davranışlara neden olabileceğinden hızı doğrudan değiştirmemelisiniz.

03:12.780 --> 03:14.610
Bununla birlikte, istisnalar da vardır.

03:14.850 --> 03:20.700
Tipik bir kullanım, birinci şahıs nişancı oyununda hızı hemen değiştireceğiniz yerdir.

03:20.700 --> 03:26.460
Karakteriniz zıpladığında, hızda hızlı bir değişim olmasını istersiniz, böylece doğrudan ayarlayabilirsiniz.

03:26.640 --> 03:33.000
Odak noktamız genellikle nesne hızını elde etmek için değeri ayarlamadan erişmektir.

03:33.000 --> 03:39.810
Örneğin, fizik tabanlı bir arabanın hız göstergesini ekrana göstermek istersek, şunları elde edebiliriz

03:39.810 --> 03:40.710
bu değer.

03:40.710 --> 03:43.320
Fiziği kapatmak hakkında konuşalım.

03:43.320 --> 03:47.970
Bazen oyunlar oyun sırasında belirli bir nesne için fiziği kapatabilir.

03:47.970 --> 03:52.920
Örneğin, nesneleri fizik yerine fare girdisi ile hareket ettirmek istiyoruz.

03:52.920 --> 03:59.220
Fiziği açmak ve kapatmak için burada geçiş yapmamız gereken iki özellik var,

03:59.220 --> 04:03.660
yerçekimi kullanımını yanlış ve kinematik kullanımını doğru olarak ayarladık.

04:03.660 --> 04:08.910
Şimdi bu katı gövdenin hareketini kodla kontrol edebiliriz Hareketi geri döndürmeye hazır olduğumuzda

04:08.910 --> 04:15.000
fizik tabanlı kontrol için, yerçekimi kullan seçeneğini true ve kinematik seçeneğini false olarak ayarlayabiliriz.

04:15.000 --> 04:20.570
Sonra yerçekimi altında geri düşecek ve eklemler ve fizik kuvvetleri vb. ile davranacaktır.

04:20.580 --> 04:25.620
Bahsettiğimiz tüm bu özellikleri kullanan bir demo oluşturalım ve birlikte nasıl çalışabileceklerini görelim.

04:25.620 --> 04:27.960
Damlalık Oyunu adında bir sahne yarattım.

04:27.960 --> 04:29.160
Sahneyi oynayalım.

04:29.160 --> 04:30.930
Bu çok basit bir oyun.

04:30.930 --> 04:35.340
Kodu inceleyeceğiz ve bu dört özelliğin nasıl kullanıldığına bakacağız.

04:35.340 --> 04:37.470
Kullanıcının bir sonraki sırasını bekliyoruz.

04:37.470 --> 04:38.880
Kullanarak uyuyor.

04:38.880 --> 04:47.070
Hızı, hızı kullanarak bir kullanıcı arayüzünde gösteririz ve fare sürüklemesine karşı düşme kombinasyonunu kullanırız

04:47.070 --> 04:51.060
İki özelliği kullanarak kinematik ve yerçekimini kullanın.

04:52.110 --> 04:52.410
Tamamdır.

04:52.410 --> 04:53.760
İşte yine birlikteyiz.

04:54.240 --> 04:57.120
Şimdi uygun oyun sahnesine bir göz atalım.

04:58.260 --> 05:02.910
Ve fizik için bu özelliklerin oyunda nasıl kullanıldığını göreceğiz.

05:03.150 --> 05:04.320
Devam edelim ve bir oynayalım.

05:10.350 --> 05:17.460
Yani bahsettiğimiz dört özellik var Birincisi, damlalık kutusu düştükçe, üzerindeki hız

05:17.460 --> 05:19.800
ekran hız özelliğini kullanıyor.

05:20.160 --> 05:27.630
İkinci olarak, kutu düştükten ve alttaki raya çarptıktan sonra, kutu, bir sonraki kutu kullanılabilir hale gelir

05:27.630 --> 05:28.680
benim kullanmam için.

05:28.710 --> 05:33.390
Böylece birkaç saniyenin düştüğünü ve ardından kullanmam için başka bir kutunun hazır olduğunu görebilirsiniz.

05:33.600 --> 05:39.660
Bunu halletmenin yolu, aşağıdaki kutu için uyuyor ifadesi doğru olana kadar beklemektir.

05:39.960 --> 05:42.600
Yani uyku yanlış.

05:42.600 --> 05:47.040
Ve nihayet vurduğunda, onların uykusu doğrudur ve sonra sıra yine bana gelir.

05:47.130 --> 05:48.630
Yani bu iki özellik.

05:49.080 --> 05:52.710
Ayrıca, kutuyu faremle nasıl kontrol edebildiğime dikkat edin.

05:52.710 --> 05:58.650
Bu yüzden katı bir gövde kullanırken, manuel olarak hareket ettirebilmem için ayarlarım var.

05:58.830 --> 06:01.980
Yerçekimini kapatıp kinematiği açıyorum.

06:01.980 --> 06:09.470
Ve sonra faremle tıkladığımda, kinematiği kapatıyorum ve yerçekimini açıyorum.

06:09.480 --> 06:11.040
Şimdi bunun için koda bir göz atalım.

06:16.740 --> 06:20.490
Yani buradakilere eriştiğim dört nokta var.

06:20.490 --> 06:25.020
Her yeni damlalık eklediğimde, yorum erişim fizik özelliklerini görebilirsiniz.

06:25.020 --> 06:30.240
Burada yaptığım şey, yerçekimini yanlış kinematiği doğru olarak ayarlamak.

06:30.240 --> 06:31.980
Bu bana fare kontrolü sağlıyor.

06:33.720 --> 06:41.400
Daha sonra her karede çağrılan güncellemede, fare düğmesine tıklarsam

06:41.400 --> 06:44.700
yerçekimini tekrar açın ve kinematiği yanlışa çevirin.

06:44.700 --> 06:47.610
Bu da doğal yerçekimi kuvvetlerinin altına düşmesini sağlar.

06:48.300 --> 06:52.980
Ayrıca, güncellemede düşerken, göz kontrolü uyuyor.

06:53.250 --> 06:56.040
Eğer uyuyorsa, bir sonraki tur için hazır demektir.

06:56.040 --> 06:58.830
Biraz puan topladım ve sonra devam ettim.

06:59.840 --> 07:01.160
Bir sonraki damlalığı bırak.

07:02.570 --> 07:05.330
Ve son olarak, ben.

07:06.660 --> 07:14.190
Maksimum hızı yakalayın, böylece bloğun en hızlı olduğu anda ne kadar hızlı gittiğine bağlı olarak puanları ödüllendiririm.

07:14.400 --> 07:20.910
Bu aptalca bir mekaniktir ve hız kullanmak için bir bahanedir, ancak hızdan düşmek için daha fazla puan verir.

07:20.910 --> 07:21.750
daha yüksek bir yükseklik.

07:21.750 --> 07:22.650
İşte bu kadar.

07:23.520 --> 07:29.010
Bir sonraki videoda fizik, yeniden döküm ve yeniden döküm Command Schedule batch konularına bakacağız.

07:29.040 --> 07:33.450
Bu videoda, bir fizik sisteminde uzamsal sorguların ne olduğunu ele alacağız.

07:33.450 --> 07:37.110
Bizim için nasıl ve neden yararlıdırlar ve onlarla ne yaparız?
