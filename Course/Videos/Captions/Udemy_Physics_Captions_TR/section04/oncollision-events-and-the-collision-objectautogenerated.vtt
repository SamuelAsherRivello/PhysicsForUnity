WEBVTT

00:00.660 --> 00:01.770
Dördüncü bölüm.

00:01.930 --> 00:02.370
Birlik.

00:02.420 --> 00:04.170
C-sharp Fizik Programlama.

00:04.200 --> 00:10.470
Bu bölümde, çarpışmalar ve tetikleyiciler için fizik olaylarını ele almayı, fizik kuvvetleri eklemeyi ele alacağız

00:10.470 --> 00:11.560
nesneleri hareket ettirmek için.

00:11.580 --> 00:15.690
En yaygın ve kullanışlı fizik özelliklerini ve fizik fonksiyonlarını ele alacağız.

00:15.690 --> 00:20.940
Ve çarpışma olayları ve çarpışma nesnesi üzerinde fizik hata ayıklamasına bir göz atacağız.

00:20.970 --> 00:24.300
Bu videoda fizik Yaşam Döngüsü özetini ele alacağız.

00:24.300 --> 00:26.700
Daha sonra çarpışma olaylarımıza geçeceğiz.

00:26.700 --> 00:28.020
Neden faydalıdırlar?

00:28.020 --> 00:33.870
Sonra Unity editörünü açacağız ve çarpışma olaylarıyla oynayacağız, Önerilen görüntüleme fiziği,

00:33.870 --> 00:40.350
yaşam döngüsü fiziği, simülasyon ve zaman genişlemesi fiziğin temellerini, olayları tanıtır,

00:40.620 --> 00:42.210
fizik, yaşam döngüsü özeti.

00:42.210 --> 00:48.360
Daha önceki bölümlerde gördüğümüz gibi, çarpışma olayları, çarpıştırıcı başka bir çarpışmayla kesiştiğinde çağrılır

00:48.360 --> 00:55.560
collider, on collision enter yöntemini bir davranışın içinde kullanırız ve fark ederiz ki

00:55.560 --> 00:58.530
çarpışma olaylarında çarpışma nesnesi.

00:58.530 --> 00:59.820
Daha yakından bakalım.

00:59.820 --> 01:00.900
Bunları neden kullanıyoruz?

01:00.900 --> 01:02.730
Öncelikle, çarpışma olayları hakkında?

01:02.730 --> 01:05.640
Bize fizik çarpışmaları hakkında daha fazla bilgi verin.

01:05.640 --> 01:09.720
Bunlar, çarpıştırıcılarla katı cisimler arasındaki çarpışmalardan bahsediyoruz.

01:09.720 --> 01:11.580
Tetikleyici ne zaman yanlış olarak ayarlanır?

01:11.580 --> 01:16.980
Bazı yaygın örnekler, bir merminin bir düşmana isabet etmesi veya bir karakterin bozuk para toplaması olabilir.

01:16.980 --> 01:20.100
Şimdi bir çarpışma olayı senaryosuna göz atalım.

01:20.100 --> 01:24.450
Mavi bir küpe doğru düşen pembe bir küpümüz olduğunu düşünelim.

01:24.450 --> 01:27.030
Her birinin bir katı gövdesi ve bir çarpıştırıcısı vardır.

01:27.030 --> 01:29.220
Çarpıştırıcı ile tetikleyici yanlış olarak ayarlanmıştır.

01:29.220 --> 01:30.480
Pembe düşüyor.

01:30.480 --> 01:33.480
Pembe çarpışmaya giriyor ve çarpışmayı ateşliyor.

01:33.480 --> 01:35.730
Pembe girin çarpışmada kalır.

01:35.730 --> 01:42.810
Şimdi, dokundukları her kare için pembe çıktığında bir çarpışma kalışı çağrısı alacaklar.

01:42.810 --> 01:45.600
Çarpışma, çarpışma çıkışında bir kez gerçekleşecektir.

01:45.600 --> 01:47.070
Sonra pembe düşmeye devam ediyor.

01:47.100 --> 01:49.490
Bizim odak noktamız gerçekten çarpışma girişi.

01:49.500 --> 01:55.050
Bu, merminin bir düşmana isabet etmesini veya karakterin bir bozuk para toplama senaryosunu yakalamamızı sağlar.

01:55.080 --> 02:00.570
Bu yönteme gelen çarpışma nesnesi bize çarpışma hakkında daha fazla bilgi verir.

02:00.570 --> 02:05.640
Collision oyun nesnesine neye çarptığımızı veya çarpışma temaslarını sorabiliriz?

02:05.640 --> 02:08.700
Çarpışma 3 boyutlu dünyanın tam olarak neresinde gerçekleşti?

02:08.700 --> 02:10.620
Şimdi neye ulaştığımıza bir göz atalım.

02:10.620 --> 02:15.990
Çarpışma oyun nesnesi adını kontrol edebilir ve aradığımız şeyle eşleşip eşleşmediğine bakabiliriz.

02:16.020 --> 02:18.150
Bu çok özel kontroller için iyidir.

02:18.150 --> 02:21.540
Etiketi bütün bir kontrol kategorisi için kullanabiliriz.

02:21.540 --> 02:22.440
Kontrol edebiliriz.

02:22.440 --> 02:26.700
Bu, madeni para olarak etiketlenmiş madeni paralardan herhangi biriyle çarpışıyor mu?

02:26.700 --> 02:27.870
Bir alternatif mi?

02:27.870 --> 02:31.470
Ayrıca kategorik kontroller için de iyi, katmanı kontrol edebiliriz.

02:31.470 --> 02:35.760
Zemin etiketleri ve katmanlarına ayarlanmış bir katmanla herhangi bir şeye çarptık mı?

02:35.760 --> 02:36.960
İkisi de burada kullanılabilir.

02:36.960 --> 02:38.370
Dikkat edilmesi gereken bir şey var.

02:38.370 --> 02:42.450
Nesnelerimizin her birinde sıfır veya bir etiket veya katman olabilir.

02:42.450 --> 02:47.670
Ancak, bir projede sınırsız etiketimiz var, ancak yalnızca 31 katmanımız var.

02:47.760 --> 02:50.790
Ayrıca katmanların etiketlerden çok daha hızlı olduğuna dikkat edin.

02:50.790 --> 02:56.040
Dolayısıyla, çok fazla katmanınız yoksa ve hız artışı elde etmek istiyorsanız, devam edin ve katmanları kullanın.

02:56.040 --> 03:00.000
Kontrol etmeniz gereken çok sayıda farklı kombinasyon varsa, etiketler sizin için daha iyi olabilir.

03:00.000 --> 03:06.120
Unity, Edit Project Settings, Tags ve Layers menülerinden açabilir ve yönetebilirsiniz.

03:06.450 --> 03:08.190
Şimdi bir demoya geçelim.

03:08.520 --> 03:12.540
Çarpışma olaylarına, bir ve iki sahneye bir göz atacağız.

03:12.540 --> 03:16.050
Sahneyi oynatacağız ve buradaki kodu inceleyeceğiz.

03:16.080 --> 03:16.950
Unity'nin içinde.

03:16.950 --> 03:20.010
Çarpışma olayları bölümümüzü açalım.

03:20.930 --> 03:22.190
Pembe bir küpümüz var.

03:22.990 --> 03:24.010
Mavi küpün içinde.

03:24.640 --> 03:26.110
Pembe küp düşecek.

03:26.880 --> 03:27.930
Bakalım ne olacak.

03:30.760 --> 03:34.000
Düşer, çarpışır ve sonra düşmeye devam eder.

03:35.020 --> 03:40.810
Konsol penceresinde bir giriş birkaç kalış ve bir çıkış olduğunu görebiliriz.

03:42.920 --> 03:48.590
Bazı basit metinleri göndermek için hata ayıklama günlüğünü kullanarak koda oldukça basit bir şekilde bakıyorum.

03:49.100 --> 03:49.730
Bu kadar.

03:50.780 --> 03:52.730
Çarpışma olaylarına bir göz atalım.

03:52.730 --> 03:53.510
İki tane görüldü.

03:55.740 --> 03:57.060
Aynı senaryo.

03:57.180 --> 03:58.530
Şu anda bir söz hakkımız var.

03:59.220 --> 03:59.940
Hadi oynayalım.

04:02.800 --> 04:04.090
Çarpışmayı görüyoruz.

04:04.090 --> 04:08.140
Ve her konsol satırında neyle çarpıştığımızı da görüyoruz.

04:08.590 --> 04:11.200
Pembe küp B küpü ile çarpışıyor.

04:11.530 --> 04:13.780
Zemine çarpmadığına dikkat edin.

04:13.810 --> 04:15.040
Nasıl yapıldığını görelim.

04:18.110 --> 04:19.370
Her yöntemin içinde.

04:19.370 --> 04:24.920
Zemine çarpıp çarpmadığımızı kontrol ediyoruz ve ardından hata ayıklama günlüğü ifadesini söylemiyoruz.

04:25.100 --> 04:26.840
Peki zemin nasıl çalışıyor?

04:27.790 --> 04:29.800
Burada, basitçe katmanı kontrol ediyoruz.

04:29.920 --> 04:32.170
Ve şimdi zemin katmanı mı?

04:32.170 --> 04:34.780
Zemin katmanı sabiti sadece zemine eşittir.

04:34.810 --> 04:37.240
Bu değişkeni saklamak için basit bir yol.

04:38.490 --> 04:44.160
Unity'ye bakarsak ve zemini beklersek, katmanın zemine ayarlandığını görürüz.

04:44.310 --> 04:46.290
Bu kod böyle biliyor.

04:46.290 --> 04:50.310
Zemine çarparken hata ayıklama günlüğü dememek için.

04:50.340 --> 04:51.090
Bu kadar.

04:52.180 --> 04:56.830
Bir sonraki videoda, tetikleyici olaylara ve çarpıştırıcı nesnesine bir göz atacağız.

04:56.950 --> 05:01.510
Tetikleyici olayların ne olduğunu, oyun projelerimizde neden yararlı olduklarını ele alacağız.

05:01.510 --> 05:04.750
Ve hatta unity'yi açıp bazı tetikleyici olaylarla oynayacağız.
